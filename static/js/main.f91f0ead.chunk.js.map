{"version":3,"sources":["Components/Login/logimg.jpg","Components/Login/logm.jpg","Utils/index.js","Assets/tronlink.png","Components/Wallets/ConnectWallet.js","Tools/WindowDimensions.js","Components/Redux/Reducer/AuthReducer.js","Utils/Converter.js","Components/Redux/Reducer/PreviewMode.js","Components/Redux/Reducer/UserId.js","Components/Login/Login.jsx","Components/Register/Register.jsx","Routes/Auth.js","Components/Redux/Reducer/MenuReducer.js","Components/topbar/logo.png","Components/topbar/Topbar.jsx","Components/Sidenavbar/Sidenavbar.jsx","Components/Control_Panel/Chart.jsx","Components/Control_Panel/Controlpanel.jsx","Components/Message/message.jpg","Components/Message/Message.jsx","Components/Table/Table.jsx","Components/Tree/Tree.jsx","Components/Redux/Reducer/PartnersLevelJson.js","Components/Partners/Partners.jsx","Components/Uplines/Table.jsx","Components/Uplines/Uplines.jsx","Components/Lostprofits/Table.jsx","Components/Lostprofits/Lostprofits.jsx","Components/Sidenavbar/Sidenavbarmobile.js","Routes/Console.js","App.js","reportWebVitals.js","Components/Redux/Store.js","index.js"],"names":["utils","tronWeb","contract","setTronWeb","at","ConnectWallet","Connect","className","onClick","width","src","logo","getWindowDimensions","window","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","slice","createSlice","name","initialState","value","reducers","toogleAuth","state","action","payload","actions","getAuth","auth","Hex_to_base58","string","a","address","fromHex","tooglePreviewModeId","getPreviewModeId","previewModeId","toogleuserId","getuserId","userId","FOUNDATION_ADDRESS","Login","authStatus","useSelector","dispatch","useDispatch","previewId","setpreviewId","Loader","setLoader","installed","loggedIn","settronWeb","localStorage","getItem","console","log","document","title","checklogin","setInterval","tronLink","clearInterval","checkUser","Utils","then","users","defaultAddress","base58","call","LoadUserExist","Promise","resolve","FetchUserId","location","href","PreviewMode","trim","length","toast","error","test","userexist","userList","JSON","parse","LoadUserAddress","userAddress","LoadUserId","CONNECT_WALLET","ready","reload","tronWebState","tries","timer","TRONGRID_API","TronWeb","hex","toHex","on","e","HandleSubmit","preventDefault","Form","onSubmit","Group","controlId","Control","placeholder","onChange","target","autoComplete","autoCorrect","required","disabled","style","opacity","size","color","marginLeft","marginBottom","Register","FaBullseye","refId","setrefId","pathname","split","Buy","currUserID","CurrentIdLoad","CurrentId","toString","refID","toastId","loading","regUser","send","feeLimit","callValue","shouldPollResponse","res","remove","success","catch","err","paddingInline","to","textDecoration","Auth","component","exact","path","toogleMenu","getTooglemenu","menu","Topbar","opensidebar","opened","userID","walletId","float","position","right","overflow","alt","Sidenavbar","useLocation","VALIDROUTE","toLowerCase","PATHNAME","display","flexDirection","alignItems","class","lineOptions","plugins","legend","gridLines","scales","x","grid","y","ticks","precision","tooltips","mode","intersect","hover","styles","fontFamily","textAlign","Chart","data","chartData","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","newData","setnewData","options","Controlpanel","id","partnersList","setpartnersList","coinsCount","setcoinsCount","coinPrice","setcoinPrice","setchartData","currentLevel","setcurrentLevel","LoadingLevels","setLoadingLevels","FetchCoinCurrecy","fetch","json","tron","usd","ProccessRefralGraphData","graphData","Temp","joinedData","toNumber","joined","moment","unix","format","push","resData","FetchData","FetchPartners","getcurrentLevel","FetchEarning","FetchLevels","setLevelsData","partners","viewUserReferral","items","item","undefined","Array","from","_","i","level","viewUserLevelExpired","checkLevel","currentTimestamp","Date","now","PartnersArray","LevelJSON","LEVEL","count","calculate_CoinsFromLevels","ConverttoHexArray","Totalcoins","LEVEL1","LEVEL2","LEVEL3","LEVEL4","LEVEL5","LEVEL_PRICE","temp","t","LevelsData","buytoast","marginTop","buyLevel","expired","exipredAgo","getTime","active","TempActive","duration","end","decimals","justifyContent","Spinner","variant","animation","role","expiredAgo","Message","message","rel","Table","coinprice","tableData","settableData","minWidth","map","index","coins","toFixed","TreeLine","styled","button","TreeItem","funcs","toggleOpen","makeParent","onDoubleClick","children","isOpen","TreeList","tree","child","Tree","setTree","newTree","addChild","parent","tooglePartnersLevelJson","Partners","searchId","setsearchId","LoadingStruct","setLoadingStruct","LoadingTable","setLoadingTable","searchPartnerData","setsearchPartnerData","treeData","settreeData","TableData","setTableData","TotalPartnersCount","FetchTree","TREEDATA","ProccessTreeData","id_to_num","resId","all","response","TempData","tempArray","PreProcessData","FetchPayments","result","SearchAboutPartner","readOnly","origin","navigator","clipboard","writeText","Uplines","setdata","Lostprofits","expiration0","expiration1","expiration2","expiration3","expiration4","expiration5","expiration6","expiration7","expiration8","Sidenavbarmobile","Offcanvas","show","onHide","Header","closeButton","Title","Body","borderRadius","Console","DISCONNECT_EMIT","App","basename","process","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","MenuReducer","AuthReducer","partnersLevelJson","PartnersLevelJson","UserId","ReactDOM","StrictMode","store","Store","getElementById"],"mappings":"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","file":"static/js/main.f91f0ead.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logimg.84960df3.jpg\";","export default __webpack_public_path__ + \"static/media/logm.9c996e3c.jpg\";","const contractAddress = \"TP3knTX2vSsPxpffb5Fe8XMgMCuqhXZdms\"\n// 'TLoV6Qr7tqDnHi641jG2hXZLQYUd4RTTAs'\n\nconst utils = {\n    tronWeb: false,\n    contract: false,\n\n    async setTronWeb(tronWeb) {\n        this.tronWeb = tronWeb;\n        this.contract = await tronWeb.contract().at(contractAddress)\n    },\n\n};\n\nexport default utils;\n\n","export default __webpack_public_path__ + \"static/media/tronlink.e60d7b91.png\";","import React from \"react\";\nimport logo from '../../Assets/tronlink.png';\n\nconst ConnectWallet = ({Connect}) => {\n  return (\n    <div className=\"Wallet-Div\">\n      <div onClick={()=>Connect()} className=\"Wallet-Circle\">\n        <img\n          width={30}\n          src={logo}\n        />\n      </div>\n      {/* <div className=\"Wallet-Circle\">\n        <img\n          width={28}\n          src=\"https://trustwallet.com/assets/images/media/assets/TWT.png\"\n        />\n      </div>\n      <div className=\"Wallet-Circle\">\n        <img\n          width={28}\n          src=\"https://app.compound.finance/compound-components/assets/icn-coinbase-wallet.svg\"\n        />\n      </div> */}\n      {/* <div onClick={()=>CONNECT_WALLET()} className=\"Wallet-Circle\">\n                    <img\n                      width={25}\n                      src=\"https://storage.opensea.io/static/wallets/walletconnect/walletconnect-alternative.png\"\n                    />\n                  </div> */}\n      {/* <div onClick={()=>CONNECT_WALLET()} className=\"Wallet-Circle\">\n                    <img\n                      width={25}\n                      src=\"https://static.opensea.io/logos/fortmatic-alternative.png\"\n                    />\n                  </div> */}\n    </div>\n  );\n};\n\nexport default ConnectWallet;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'auth',\n  initialState: {\n    value: \"LOGGEDOUT\",\n  },\n  reducers: {\n    toogleAuth: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleAuth } = slice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    // dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getAuth = state => state.auth.value;\n\nexport default slice.reducer;\n","export const Hex_to_base58 = async(string)=> window?.tronWeb?.address?.fromHex(string)","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'previewModeId',\n  initialState: {\n    value: null,\n  },\n  reducers: {\n    tooglePreviewModeId: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { tooglePreviewModeId } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getPreviewModeId = state => state.previewModeId.value;\n\nexport default slice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'userId',\n  initialState: {\n    value: \"\",\n  },\n  reducers: {\n    toogleuserId: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleuserId } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getuserId = state => state.userId.value;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./Login.css\";\r\nimport logimg from \"./logimg.jpg\";\r\nimport logm from \"./logm.jpg\";\r\nimport { GrSend } from \"react-icons/gr\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { BsInstagram } from \"react-icons/bs\";\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport Utils from \"../../Utils/index\";\r\n\r\n// import Logo from \"../../Assets/Logos/Classfresh(logo).png\";\r\nimport { Form, Button, Toast } from \"react-bootstrap\";\r\nimport ConnectWallet from \"../Wallets/ConnectWallet\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toogleAuth, getAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { FaBullseye } from \"react-icons/fa\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { tooglePreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport UserId, { toogleuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nconst Login = () => {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const authStatus = useSelector(getAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginId, setloginId] = useState(\"\");\r\n  const [previewId, setpreviewId] = useState(\"\");\r\n  const [Loader, setLoader] = useState(false);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  let TOKEN = localStorage.getItem(\"access_token\");\r\n\r\n  console.log(authStatus);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login|SmartGenie\";\r\n\r\n    const checklogin = setInterval(async () => {\r\n      if (window?.tronLink?.tronWeb) {\r\n        clearInterval(checklogin);\r\n        await checkUser();\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const checkUser = async () => {\r\n    // console.log(window.tronWeb);\r\n    await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const LoadUserExist = await Utils.contract\r\n        .users(window.tronLink.tronWeb.defaultAddress.base58)\r\n        .call();\r\n      const userexist = await Promise.resolve(LoadUserExist);\r\n      if (userexist[0] == true) {\r\n        await FetchUserId(window.tronLink.tronWeb.defaultAddress.base58)\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      } else {\r\n        window.location.href = \"/register\";\r\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n      }\r\n      // console.log(userexist[0]);\r\n    });\r\n  };\r\n\r\n  const PreviewMode = async () => {\r\n    try {\r\n      if (previewId.trim().length == 0) {\r\n        return toast.error(\"Please enter valid RefId/address\");\r\n      }\r\n\r\n      setLoader(true);\r\n      // if string is address\r\n      if (/[a-zA-Z]/.test(previewId)) {\r\n        const LoadUserExist = await Utils.contract.users(previewId).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        setLoader(false);\r\n        if (userexist[0] == false) {\r\n          setLoader(false);\r\n\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n\r\n        dispatch(tooglePreviewModeId(await Hex_to_base58(previewId)));\r\n        await FetchUserId(previewId)\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n\r\n        console.log(userexist[0]);\r\n      } else {\r\n        const LoadUserAddress = await Utils.contract\r\n          .userList(JSON.parse(previewId))\r\n          .call();\r\n        const userAddress = await Promise.resolve(LoadUserAddress);\r\n\r\n        const LoadUserExist = await Utils.contract.users(userAddress).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist[0] == false) {\r\n          setLoader(false);\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n        dispatch(tooglePreviewModeId(await Hex_to_base58(userAddress)));\r\n        await FetchUserId(userAddress)\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n\r\n        setLoader(false);\r\n      }\r\n\r\n      // const userexist = await Promise.resolve(LoadUserExist);\r\n      // console.log(userexist);\r\n      // if (userexist[0] == true) {\r\n      //   dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      // } else {\r\n      //   window.location.href = \"/register\";\r\n      //   dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n      // }\r\n    } catch (e) {\r\n      console.log(e);\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const FetchUserId = async (userAddress) => {\r\n    const LoadUserId = await Utils.contract.users(userAddress).call();\r\n    const userId = await Promise.resolve(LoadUserId);\r\n    dispatch(toogleuserId(JSON.parse(userId[1])));\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n\r\n  //     if (window.tronLink?.tronWeb) {\r\n  //       dispatch(toogleAuth(\"LOGGEDIN\"));\r\n  //     } else {\r\n  //       dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n  //     }\r\n\r\n  //     if (authStatus == \"LOGGEDOUT\") {\r\n  //       if (window.location.pathname != \"/\") {\r\n  //         window.location.href = \"/\";\r\n  //       }\r\n  //     }\r\n  //   }, 200);\r\n  // }, [tronWeb]);\r\n\r\n  const FetchData = async () => {\r\n    try {\r\n      await FetchPartners(\r\n        window.tronLink.tronWeb.defaultAddress.base58,\r\n        []\r\n      ).then((e) => {\r\n        alert(e.length);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const FetchPartners = async (id, partners) => {\r\n    return await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          partners.push(e);\r\n          await FetchPartners(e, partners);\r\n        }\r\n        return partners;\r\n      });\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      if (!window.tronWeb.ready || window.tronLink.tronWeb == false) {\r\n        window.location.reload();\r\n      }\r\n\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            \r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      console.log(window.tronWeb);\r\n\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object as TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(() => {\r\n        // alert(window.tronLink.tronWeb.defaultAddress.base58);\r\n        // dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-Main\">\r\n      <div className=\"Triangle\"></div>\r\n\r\n      <div className=\"Vertical-Line\" />\r\n\r\n      <div className=\"Cover-Div\">\r\n        <div className=\"Outer-Div\">\r\n          <div className=\"Inner-Div\">\r\n            <div className=\"Double-Div\">\r\n              <div className={\"Form-Box-Inside\"}>\r\n                <div className=\"Logo-Div\">\r\n                  <p>Connect To Wallet</p>\r\n                  {/* <img style={{ width: \"221px\", height: \"67px\" }} src={Logo} /> */}\r\n                </div>\r\n\r\n                <ConnectWallet Connect={CONNECT_WALLET} />\r\n\r\n                <div className=\"Divider\">\r\n                  Or you can enter manually, enter the number of your ETH purse\r\n                </div>\r\n                <div className=\"Inside-Form-Div\">\r\n                  <Form onSubmit={(e) => HandleSubmit(e)}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                      <Form.Control\r\n                        name=\"text\"\r\n                        className=\"Input\"\r\n                        placeholder=\"Enter Address or Referal Id\"\r\n                        value={previewId}\r\n                        onChange={(e) => {\r\n                          setpreviewId(e.target.value);\r\n                        }}\r\n                        autoComplete={\"false\"}\r\n                        autoCorrect={\"false\"}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <div className=\"Button-Div\">\r\n                      <button\r\n                        onClick={PreviewMode}\r\n                        disabled={Loader}\r\n                        style={{ opacity: Loader ? 0.5 : 1 }}\r\n                        className=\"Button\"\r\n                      >\r\n                        {Loader ? (\r\n                          <p>Loading (Please wait)</p>\r\n                        ) : (\r\n                          <p>Enter App (Preview Mode)</p>\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n\r\n              {width >= 630 && (\r\n                <div className={\"Form-Box-Inside\"}>\r\n                  <div className=\"login2\">\r\n                    <center>\r\n                      {/* <img src={logm} height=\"80px\" width=\"90px\" alt=\"login_m\" /> */}\r\n                    </center>\r\n                    <h2 className=\"log2h2\">WELCOME TO SMART GENIE</h2>\r\n                    <center>\r\n                      <p className=\"social\">Follow us on social networks</p>\r\n                    </center>\r\n                    <div className=\"icdiv\">\r\n                      <div className=\"iccircle\">\r\n                        <GrSend size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <FiTwitter color=\"black\" size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <BsInstagram color=\"black\" size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <BsFacebook color=\"black\" size=\"20px\" />\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <p className=\"social\">\r\n                      Any question you can get in our chat:\r\n                    </p>\r\n\r\n                    <button className=\"log2btn\">Chat in Telegram EN</button>\r\n                    <button className=\"log2btn\">Join Discord</button>\r\n\r\n                    <div className=\"Bottom\">\r\n                      <p className=\"log2con\">SMART GENIE smart-contract:</p>\r\n                      <p className=\"open\">\r\n                        0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7\r\n                        <BsBoxArrowUpRight\r\n                          style={{ marginLeft: 10, marginBottom: 1 }}\r\n                          size=\"12px\"\r\n                        />\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// function Login(){\r\n//     return(\r\n//         <div className=\"Login\">\r\n//             <div className=\"login1\">\r\n//                 <center>\r\n//                     <h1 className=\"logh1\">Login</h1>\r\n//                     <center><h5 className=\"logh5\">Automatic login if you have one of the following wallets:</h5></center>\r\n//                     <img src={logimg} alt=\"logimage\" height=\"80px\" width=\"250px\" />\r\n//                     <center><h5 className=\"logh5\">Or you can enter manually, enter the number of your ETH purse</h5></center>\r\n//                     <input className=\"loginp\" placeholder=\"Enter ETH address or system ID\"/><br/><br/>\r\n//                     <button className=\"logbtn\">Enter manually (preview mode)</button>\r\n\r\n//                 </center>\r\n//             </div>\r\n// <div className=\"login2\">\r\n//     <center>\r\n//         <img src={logm} height=\"80px\" width=\"90px\" alt=\"login_m\" />\r\n//     </center>\r\n//     <h2 className=\"log2h2\">SMART  GENIE</h2>\r\n//     <center><p className=\"social\">Follow us on social networks</p></center>\r\n//     <div className=\"icdiv\">\r\n//     <div className=\"iccircle\">\r\n//         <GrSend/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//     <FiTwitter color=\"black\"/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//         <BsInstagram color=\"black\"/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//         <BsFacebook color=\"black\" size=\"20px\"/>\r\n//     </div>\r\n\r\n//     </div>\r\n//     <br/>\r\n\r\n//     <p className=\"social\">Any question you can get in our chat:</p>\r\n\r\n// <button className=\"log2btn\"><GrSend className=\"send\" size=\"15px\"/>Chat in Telegram EN</button>\r\n\r\n// <p className=\"log2con\">SMART GENIE smart-contract:</p>\r\n\r\n// <div className=\"open\">\r\n//     <div className=\"open1\">\r\n//     <p className=\"log2con1\">\r\n// (Contract Address to be Updated)\r\n// </p>\r\n//     </div>\r\n\r\n//     <div className=\"open2\">\r\n//     <BsBoxArrowUpRight size=\"12px\"/>\r\n//     </div>\r\n// </div>\r\n// </div>\r\n\r\n// </div>\r\n//     )\r\n// }\r\n// export default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./Register.css\";\r\nimport { GrSend } from \"react-icons/gr\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { BsInstagram } from \"react-icons/bs\";\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\r\n\r\n// import Logo from \"../../Assets/Logos/Classfresh(logo).png\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport ConnectWallet from \"../Wallets/ConnectWallet\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { FaBullseye } from \"react-icons/fa\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport Utils from \"../../Utils/index\";\r\nimport { getAuth, toogleAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { toogleuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nconst Register = () => {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const [Register, setRegister] = useState(FaBullseye);\r\n\r\n  const [loginId, setloginId] = useState(\"\");\r\n  const [refId, setrefId] = useState(null);\r\n  const [alertdata, setalertdata] = useState(null);\r\n  const [Loader, setLoader] = useState(false);\r\n\r\n  const FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\n  const authStatus = useSelector(getAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  let TOKEN = localStorage.getItem(\"access_token\");\r\n\r\n  // const Login =()=>{\r\n  //   window.location = \"http://console.localhost:3000/\"\r\n  // }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Smart Genie|Register\";\r\nif(window.location?.pathname?.split(\"/\")[2]){\r\n  setrefId(window.location?.pathname?.split(\"/\")[2])\r\n}\r\n  }, []);\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      if (!window.tronWeb.ready) {\r\n        window.location.href = \"/\";\r\n      }\r\n\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        // Set default address (foundation address) used for contract calls\r\n        // Directly overwrites the address object as TronLink disabled the\r\n        // function call\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(FOUNDATION_ADDRESS),\r\n          base58: FOUNDATION_ADDRESS,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        if (refId != null) {\r\n          await Buy(refId);\r\n        } else {\r\n          const CurrentIdLoad = await Utils.contract.currUserID().call();\r\n          const CurrentId = await Promise.resolve(CurrentIdLoad);\r\n          await Buy(JSON.parse(CurrentId.toString()));\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const Buy = async (refID) => {\r\n    window.tronWeb.defaultAddress = {\r\n      hex: window.tronLink.tronWeb.defaultAddress.hex,\r\n      base58: window.tronLink.tronWeb.defaultAddress.base58,\r\n    };\r\n\r\n    return await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const toastId = toast.loading(\"Waiting for transction confirmation\");\r\n      setLoader(true);\r\n      try {\r\n        await Utils.contract\r\n          .regUser(refID)\r\n          .send({\r\n            feeLimit: 100_000_000,\r\n            callValue: 1000000 * 300,\r\n            shouldPollResponse: true,\r\n          })\r\n          .then(async(res) => {\r\n            toast.remove(toastId);\r\n            toast.success(\"Transaction done successfully\");\r\n            await FetchUserId(window.tronLink.tronWeb.defaultAddress.base58);\r\n            dispatch(toogleAuth(\"LOGGEDIN\"));\r\n\r\n            return res;\r\n          })\r\n          .catch(async (err) => {\r\n            await checkUser(toastId);\r\n            console.log(err);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n        await checkUser(toastId);\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkUser = async (toastId) => {\r\n    console.log(window.tronWeb);\r\n    await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const LoadUserExist = await Utils.contract\r\n        .users(window.tronLink.tronWeb.defaultAddress.base58)\r\n        .call();\r\n      const userexist = await Promise.resolve(LoadUserExist);\r\n      if (userexist[0] == true) {\r\n        toast.remove(toastId);\r\n        toast.success(\"Transaction done successfully\");\r\n        setLoader(false);\r\n        await FetchUserId(window.tronLink.tronWeb.defaultAddress.base58);\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n        window.location.href = \"/\";\r\n      } else {\r\n        window.location.href = \"/register\";\r\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n        setLoader(false);\r\n        toast.remove(toastId);\r\n        toast.error(\"Transaction Failed\");\r\n      }\r\n\r\n      // console.log(userexist[0]);\r\n    });\r\n  };\r\n\r\n  const FetchUserId = async (userAddress) => {\r\n    const LoadUserId = await Utils.contract.users(userAddress).call();\r\n    const userId = await Promise.resolve(LoadUserId);\r\n    dispatch(toogleuserId(JSON.parse(userId[1])));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-Main\">\r\n      <Toaster />\r\n\r\n      <div className=\"Triangle\"></div>\r\n\r\n      <div className=\"Vertical-Line\" />\r\n\r\n      <div className=\"Cover-Div\">\r\n        <div className=\"Outer-Div\">\r\n          <div className=\"Inner-Div\">\r\n            <div className=\"Double-Div\">\r\n              <div className={\"Form-Box-Inside\"}>\r\n                <div className=\"Logo-Div\">\r\n                  <p>Registration</p>\r\n                  {/* <img style={{ width: \"221px\", height: \"67px\" }} src={Logo} /> */}\r\n                </div>\r\n\r\n                <ConnectWallet />\r\n\r\n                <div style={{ paddingInline: \"20px\" }} className=\"Divider\">\r\n                  Enter Refereral Id of Upline or leave it empty to get\r\n                  automatically\r\n                </div>\r\n                <div className=\"Inside-Form-Div\">\r\n                  <Form onSubmit={(e) => HandleSubmit(e)}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                      <Form.Control\r\n                        name=\"email\"\r\n                        className=\"Input\"\r\n                        placeholder=\"Enter Referal Id of Upline\"\r\n                        value={refId}\r\n                        onChange={(e) => {\r\n                          setrefId(e.target.value);\r\n                        }}\r\n                        required={false}\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <div className=\"Button-Div\">\r\n                      <button\r\n                        onClick={CONNECT_WALLET}\r\n                        disabled={Loader}\r\n                        style={{ opacity: Loader ? 0.5 : 1 }}\r\n                        className=\"Button\"\r\n                      >\r\n                        {Loader ? (\r\n                          <p>Transction Loading...</p>\r\n                        ) : (\r\n                          <p>Purchase Level 1 to Register</p>\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"Back-Button-Div\">\r\n                      <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\r\n                        <button className=\"Back-Button\">Back</button>\r\n                      </Link>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n\r\n              {width >= 630 && (\r\n                <div className={\"Form-Box-Inside\"}>\r\n                  <div className=\"login2\">\r\n                    <center>\r\n                      {/* <img src={logm} height=\"80px\" width=\"90px\" alt=\"login_m\" /> */}\r\n                    </center>\r\n                    <h2 className=\"log2h2\">WELCOME TO SMART GENIE</h2>\r\n                    <center>\r\n                      <p className=\"social\">Follow us on social networks</p>\r\n                    </center>\r\n                    <div className=\"icdiv\">\r\n                      <div className=\"iccircle\">\r\n                        <GrSend size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <FiTwitter color=\"black\" size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <BsInstagram color=\"black\" size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <BsFacebook color=\"black\" size=\"20px\" />\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <p className=\"social\">\r\n                      Any question you can get in our chat:\r\n                    </p>\r\n\r\n                    <button className=\"log2btn\">Chat in Telegram EN</button>\r\n                    <button className=\"log2btn\">Join Discord</button>\r\n\r\n                    <div className=\"Bottom\">\r\n                      <p className=\"log2con\">SMART GENIE smart-contract:</p>\r\n                      <p className=\"open\">\r\n                        0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7\r\n                        <BsBoxArrowUpRight\r\n                          style={{ marginLeft: 10, marginBottom: 1 }}\r\n                          size=\"12px\"\r\n                        />\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n// function Login(){\r\n//     return(\r\n//         <div className=\"Login\">\r\n//             <div className=\"login1\">\r\n//                 <center>\r\n//                     <h1 className=\"logh1\">Login</h1>\r\n//                     <center><h5 className=\"logh5\">Automatic login if you have one of the following wallets:</h5></center>\r\n//                     <img src={logimg} alt=\"logimage\" height=\"80px\" width=\"250px\" />\r\n//                     <center><h5 className=\"logh5\">Or you can enter manually, enter the number of your ETH purse</h5></center>\r\n//                     <input className=\"loginp\" placeholder=\"Enter ETH address or system ID\"/><br/><br/>\r\n//                     <button className=\"logbtn\">Enter manually (preview mode)</button>\r\n\r\n//                 </center>\r\n//             </div>\r\n// <div className=\"login2\">\r\n//     <center>\r\n//         <img src={logm} height=\"80px\" width=\"90px\" alt=\"login_m\" />\r\n//     </center>\r\n//     <h2 className=\"log2h2\">SMART  GENIE</h2>\r\n//     <center><p className=\"social\">Follow us on social networks</p></center>\r\n//     <div className=\"icdiv\">\r\n//     <div className=\"iccircle\">\r\n//         <GrSend/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//     <FiTwitter color=\"black\"/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//         <BsInstagram color=\"black\"/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//         <BsFacebook color=\"black\" size=\"20px\"/>\r\n//     </div>\r\n\r\n//     </div>\r\n//     <br/>\r\n\r\n//     <p className=\"social\">Any question you can get in our chat:</p>\r\n\r\n// <button className=\"log2btn\"><GrSend className=\"send\" size=\"15px\"/>Chat in Telegram EN</button>\r\n\r\n// <p className=\"log2con\">SMART GENIE smart-contract:</p>\r\n\r\n// <div className=\"open\">\r\n//     <div className=\"open1\">\r\n//     <p className=\"log2con1\">\r\n// (Contract Address to be Updated)\r\n// </p>\r\n//     </div>\r\n\r\n//     <div className=\"open2\">\r\n//     <BsBoxArrowUpRight size=\"12px\"/>\r\n//     </div>\r\n// </div>\r\n// </div>\r\n\r\n// </div>\r\n//     )\r\n// }\r\n// export default Login;\r\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport \"../App.css\";\nimport Login from \"../Components/Login/Login\";\nimport Register from \"../Components/Register/Register\";\n\nfunction Auth() {\n  return (\n    <div>\n      <Route component={Login} exact path=\"/\" />\n      <Route component={Register} path=\"/register\" />\n\n    </div>\n  );\n}\n\nexport default Auth;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'menu',\n  initialState: {\n    value: false,\n  },\n  reducers: {\n    toogleMenu: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleMenu } = slice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    // dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getTooglemenu = state => state.menu.value;\n\nexport default slice.reducer;\n","export default __webpack_public_path__ + \"static/media/logo.fba3736c.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./Topbar.css\";\r\nimport logo from \"./logo.png\";\r\nimport { RiProfileLine } from \"react-icons/ri\";\r\nimport { BsFillSuitDiamondFill } from \"react-icons/bs\";\r\nimport britain from \"./britain.png\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toogleMenu, getTooglemenu } from \"../Redux/Reducer/MenuReducer\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { getuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nfunction Topbar(opensidebar, opened) {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const previewId = useSelector(getPreviewModeId);\r\n  const userID = useSelector(getuserId);\r\n\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const menu = useSelector(getTooglemenu);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"topbar\">\r\n      <div className=\"topbarcontainer\">\r\n        {/* <div className=\"leftcontent\">\r\n                        <img src={logo} alt=\"logo\" className=\"logo\"></img>\r\n                </div> */}\r\n\r\n        {width <= 850 && (\r\n          <div className=\"div0\">\r\n            <div onClick={() => dispatch(toogleMenu(!menu))} className=\"menu\">\r\n              <img src=\"https://img.icons8.com/material-outlined/48/000000/menu--v1.png\" />{\" \"}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"div1\">\r\n          <div className=\"contentDiv\">\r\n            <span className=\"address\">Id : {userID}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"div2\">\r\n          <div className=\"contentDiv\">\r\n            <span style={{ width: \"calc(100% - 25px)\" }} className=\"address\">\r\n              Address: {walletId}\r\n            </span>\r\n            <span style={{ float: \"right\", position: \"absolute\", right: 10 }}>\r\n              <div\r\n                style={{ overflow: \"hidden\", width: 30, height: 30 }}\r\n                className=\"LanguageDiv\"\r\n              >\r\n                <img\r\n                  alt=\"\"\r\n                  width=\"25\"\r\n                  height=\"25\"\r\n                  src=\"https://avatars.githubusercontent.com/u/64833303?s=96&v=4\"\r\n                />\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"div3\">\r\n          {/* <div className=\"LanguageDiv\">\r\n            <img\r\n              className=\"image\"\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n              src={britain}\r\n              alt=\"aa\"\r\n              width=\"40px\"\r\n            />\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Topbar;\r\n","import React from \"react\";\r\nimport \"./Sidenavbar.css\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport { AiFillMessage } from \"react-icons/ai\";\r\nimport { FaNetworkWired } from \"react-icons/fa\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nimport { FaSearchDollar } from \"react-icons/fa\";\r\nimport { IoIosSend } from \"react-icons/io\";\r\nimport { BsBoxArrowRight } from \"react-icons/bs\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { toogleAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction Sidenavbar() {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const PATHNAME = () => location?.pathname?.toLowerCase();\r\n\r\n  const VALIDROUTE = (path) => (PATHNAME(path) == path ? true : false);\r\n\r\n  const Logout = () => {\r\n    window.tronLink.tronWeb = false;\r\n    dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidenav\">\r\n      <div className=\"sidebarcontainer\">\r\n        <div className=\"menu\">\r\n          <div className=\"logodiv\">Smart Genie</div>\r\n          <div className=\"hlinediv\">\r\n            <div className=\"hline\"></div>\r\n          </div>\r\n          <ul className=\"sidebarlist\">\r\n            <Link\r\n              className={VALIDROUTE(\"/\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/\") ? (\r\n                    <img\r\n                      src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c56c4a24ed7964135f087b1_Account%20dark.svg\"\r\n                      width=\"24\"\r\n                      alt=\"\"\r\n                      class=\"sidemenu_button_icon\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c3f8723a6538c3f77d63a3c_Account.png\"\r\n                      width=\"24\"\r\n                      alt=\"\"\r\n                      class=\"sidemenu_button_icon\"\r\n                    />\r\n                  )}\r\n                </span>\r\n                Control Panel\r\n              </li>\r\n            </Link>\r\n\r\n            <Link\r\n              className={VALIDROUTE(\"/partners\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Partners\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/partners\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/partners\") ? (\r\n                    <img src=\"https://img.icons8.com/small/24/000000/tree-structure.png\" />\r\n                  ) : (\r\n                    <img src=\"https://img.icons8.com/small/24/ffffff/tree-structure.png\" />\r\n                  )}\r\n                </span>\r\n                Partners\r\n              </li>\r\n            </Link>\r\n            <Link\r\n              className={VALIDROUTE(\"/uplines\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Uplines\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/uplines\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/uplines\") ? (\r\n                    <img src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/24/000000/external-users-cv-resume-flatart-icons-outline-flatarticons.png\" />\r\n                  ) : (\r\n                    <img src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/24/ffffff/external-users-cv-resume-flatart-icons-outline-flatarticons.png\" />\r\n                  )}\r\n                </span>\r\n                Uplines\r\n              </li>\r\n            </Link>\r\n            <Link\r\n              className={VALIDROUTE(\"/lostprofits\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Lostprofits\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/lostprofits\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/lostprofits\") ? (\r\n                    <img src=\"https://img.icons8.com/fluency-systems-filled/24/000000/search-dollar.png\" />\r\n                  ) : (\r\n                    <img src=\"https://img.icons8.com/fluency-systems-filled/24/ffffff/search-dollar.png\" />\r\n                  )}\r\n                </span>\r\n                Lost profits\r\n              </li>\r\n            </Link>\r\n            {/* <li\r\n              style={{ color: VALIDROUTE(\"/promo\") ? \"white\" : null }}\r\n              className=\"sidebaritems\"\r\n            >\r\n              <span className=\"icon\">\r\n                <IoIosSend size={24} />\r\n              </span>\r\n              promo\r\n            </li> */}\r\n\r\n            <Link\r\n              onClick={Logout}\r\n              className={\"Link\"}\r\n              to=\"/\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li className=\"sidebaritems\">\r\n                <span className=\"icon\">\r\n                  <BsBoxArrowRight size={24} />\r\n                </span>\r\n                Logout\r\n              </li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Sidenavbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst lineOptions = {\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    gridLines: {\r\n      display: false,\r\n    },\r\n  },\r\n  scales: {\r\n    x: {\r\n      grid: {\r\n        display: false,\r\n      },\r\n    },\r\n    y: {\r\n      grid: {\r\n        display: false,\r\n      },\r\n      ticks: {\r\n        precision:0\r\n      }\r\n      \r\n    },\r\n  \r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n  },\r\n  hover: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n  },\r\n};\r\n\r\nconst styles = {\r\n  fontFamily: \"sans-serif\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst Chart = ({ data }) => {\r\n  let chartData = {\r\n    labels: data?.labels,\r\n    datasets: [\r\n      {\r\n        fill: false,\r\n        lineTension: 0.2,\r\n        // backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"#54cc7d\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#54cc7d\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#54cc7d\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: data?.data,\r\n        fill: \"start\",\r\n        backgroundColor: \"#54cc7d14\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [newData, setnewData] = useState(chartData);\r\n\r\n  useEffect(() => {\r\n    chartData.labels = data.labels;\r\n    chartData.datasets[0].data = data.data;\r\n    setnewData(chartData);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div style={styles}>\r\n      <Line width={900} height={300} data={newData} options={lineOptions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Controlpanel.css\";\r\nimport Chart from \"./Chart\";\r\nimport Slidecontent from \"./Slidecontent\";\r\nimport Chart2 from \"./chart2\";\r\nimport { AiFillBell, AiFillFileExclamation } from \"react-icons/ai\";\r\nimport ScrollToTop from \"../../Tools/ScrollToTop\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport Utils from \"../../Utils/index\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport TronWeb from \"tronweb\";\r\nimport CountUp from \"react-countup\";\r\nimport moment from \"moment\";\r\nimport \"./Levels.css\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst TEMP_ADDRESS = \"TJrQX9SeYDPKVy9eKEViWGqDL2wFGUBaNJ\";\r\n\r\nfunction Controlpanel() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let id = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [partnersList, setpartnersList] = useState(0);\r\n  const [coinsCount, setcoinsCount] = useState(0);\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n  const [chartData, setchartData] = useState({ labels: [], data: [] });\r\n  const [currentLevel, setcurrentLevel] = useState(0);\r\n  const [FOUNDATION_ADDRESS, setFOUNDATION_ADDRESS] = useState(TEMP_ADDRESS);\r\n  const [LoadingLevels, setLoadingLevels] = useState(true);\r\n\r\n  let Total = 0;\r\n\r\n  let partners = [];\r\n\r\n  console.log(previewId);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setcoinPrice(data.tron.usd);\r\n      });\r\n  };\r\n\r\n  const ProccessRefralGraphData = async (data) => {\r\n    let labels = [];\r\n    let graphData = [];\r\n    let Temp = \"\";\r\n\r\n    for await (const address of data) {\r\n      const joinedData = await Utils.contract.users(address).call();\r\n      let joined = await Promise.resolve(joinedData[3].toNumber());\r\n      joined = moment.unix(joined).format(\"DD/MM/YYYY\");\r\n      if (Temp == joined) {\r\n        graphData[labels.length - 1] += 1;\r\n      } else {\r\n        labels.push(joined);\r\n        graphData[labels.length - 1] = 1;\r\n        Temp = joined;\r\n      }\r\n    }\r\n\r\n    let resData = {\r\n      labels: labels,\r\n      data: graphData,\r\n    };\r\n\r\n    // console.log(labels, graphData);\r\n\r\n    return resData;\r\n  };\r\n\r\n  const FetchData = async () => {\r\n    try {\r\n      return await FetchPartners(id, []).then(async (e) => {\r\n        setpartnersList(e);\r\n        await getcurrentLevel(id);\r\n        // console.log(e);\r\n        return await FetchEarning(id, e.length).then(async () => {\r\n          await ProccessRefralGraphData(e).then(async (res) => {\r\n            setchartData(res);\r\n            await FetchLevels(id).then((data) => {\r\n              setLevelsData(data);\r\n              setLoadingLevels(false)\r\n            });\r\n            // console.log(res);\r\n          });\r\n        });\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const FetchPartners = async (id, partners) => {\r\n    // console.log(id);\r\n    return await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          partners.push(e);\r\n          await FetchPartners(e, partners);\r\n        }\r\n        return partners;\r\n      });\r\n  };\r\n\r\n  const getcurrentLevel = async (address) => {\r\n    let currentLevel = 0;\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      if (\r\n        currentTimestamp.toNumber() < Date.now() &&\r\n        currentTimestamp.toNumber() != 0\r\n      ) {\r\n        ++currentLevel;\r\n      }\r\n    }\r\n    setcurrentLevel(currentLevel);\r\n    return currentLevel;\r\n  };\r\n\r\n  // const FetchEarning = async (id, partners, coins) => {\r\n  //   return await Utils.contract\r\n  //     .viewUserReferral(id)\r\n  //     .call()\r\n  //     .then(async (items) => {\r\n  //       ++LEVEL;\r\n\r\n  //       if (LEVEL == MAX_LEVEL) {\r\n  //         setcoinsCount(coins);\r\n  //         setpartnersList(partners);\r\n  //         // console.log(coins, partners);\r\n  //         return coins;\r\n  //       }\r\n\r\n  //       let tempCoin = coins;\r\n  // for await (const item of items) {\r\n  //   let e = await Hex_to_base58(item);\r\n  //   if (e == undefined || !e) return;\r\n  //         if (LEVEL == 1) {\r\n  //           for await (const level of Array.from(\r\n  //             { length: 10 },\r\n  //             (_, i) => i + 1\r\n  //           )) {\r\n  //             if (level == 1 || level == 6) {\r\n  //               let expiration = (\r\n  //                 await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  //               ).toNumber();\r\n\r\n  //               if (expiration != 0) {\r\n  //                 tempCoin +=\r\n  //                   (\r\n  //                     await Utils.contract.LEVEL_PRICE(level).call()\r\n  //                   ).toNumber() / 1000000;\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         } else if (LEVEL == 2) {\r\n  //           for await (const level of Array.from(\r\n  //             { length: 10 },\r\n  //             (_, i) => i + 1\r\n  //           )) {\r\n  //             if (level == 2 || level == 7) {\r\n  //               let expiration = (\r\n  //                 await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  //               ).toNumber();\r\n\r\n  //               if (expiration != 0) {\r\n  //                 tempCoin +=\r\n  //                   (\r\n  //                     await Utils.contract.LEVEL_PRICE(level).call()\r\n  //                   ).toNumber() / 1000000;\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         } else if (LEVEL == 3) {\r\n  //           for await (const level of Array.from(\r\n  //             { length: 10 },\r\n  //             (_, i) => i + 1\r\n  //           )) {\r\n  //             if (level == 3 || level == 8) {\r\n  //               let expiration = (\r\n  //                 await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  //               ).toNumber();\r\n\r\n  //               if (expiration != 0) {\r\n  //                 tempCoin +=\r\n  //                   (\r\n  //                     await Utils.contract.LEVEL_PRICE(level).call()\r\n  //                   ).toNumber() / 1000000;\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         } else if (LEVEL == 4) {\r\n  // for await (const level of Array.from(\r\n  //   { length: 10 },\r\n  //   (_, i) => i + 1\r\n  // )) {\r\n  //   if (level == 4 || level == 9) {\r\n  //     let expiration = (\r\n  //       await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  //     ).toNumber();\r\n\r\n  //     if (expiration != 0) {\r\n  //       tempCoin +=\r\n  //         (\r\n  //           await Utils.contract.LEVEL_PRICE(level).call()\r\n  //         ).toNumber() / 1000000;\r\n  //     }\r\n  //   }\r\n  // }\r\n  //         } else if (LEVEL == 5) {\r\n  //           for await (const level of Array.from(\r\n  //             { length: 10 },\r\n  //             (_, i) => i + 1\r\n  //           )) {\r\n  //             if (level == 5 || level == 10) {\r\n  // let expiration = (\r\n  //   await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  // ).toNumber();\r\n\r\n  // if (expiration != 0) {\r\n  //   tempCoin +=\r\n  //     (\r\n  //       await Utils.contract.LEVEL_PRICE(level).call()\r\n  //     ).toNumber() / 1000000;\r\n  // }\r\n  //             }\r\n  //           }\r\n  //         }\r\n\r\n  //         ++countLoading;\r\n  //         setpartnersList(\r\n  //           Array.from({ length: countLoading }, (_, i) => i + 1)\r\n  //         );\r\n  //         setcoinsCount(tempCoin);\r\n\r\n  //         partners.push(e);\r\n  //         await FetchEarning(e, partners, coins + tempCoin);\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  let PartnersArray = [];\r\n  let LevelJSON = {};\r\n\r\n  let MAX_LEVEL = 5;\r\n  var LEVEL = 0;\r\n\r\n  let countLoading = 0;\r\n\r\n  const FetchEarning = async (id, count) => {\r\n    ++LEVEL;\r\n\r\n    if (count == PartnersArray.length) {\r\n      // console.log(count, PartnersArray.length);\r\n      // console.log(LevelJSON);\r\n      // console.log(LEVEL);\r\n      return await calculate_CoinsFromLevels(LevelJSON).then((res) => {\r\n        setcoinsCount(res);\r\n      });\r\n      // return;\r\n    } else {\r\n      Utils.contract\r\n        .viewUserReferral(id)\r\n        .call()\r\n        .then(async (items) => {\r\n          PartnersArray = [...PartnersArray, ...items];\r\n\r\n          if (LEVEL == 1) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 2) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 3) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 4) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 5) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          }\r\n\r\n          if (items.length > 0) {\r\n            for await (const item of items) {\r\n              let e = await Hex_to_base58(item);\r\n              if (e == undefined || !e) return;\r\n\r\n              await FetchEarning(e, count);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const calculate_CoinsFromLevels = async (data) => {\r\n    let Totalcoins = 0;\r\n\r\n    let LEVEL1 = data[\"1\"];\r\n    let LEVEL2 = data[\"2\"];\r\n    let LEVEL3 = data[\"3\"];\r\n    let LEVEL4 = data[\"4\"];\r\n    let LEVEL5 = data[\"5\"];\r\n\r\n    if (LEVEL1 != undefined) {\r\n      for await (const id of LEVEL1) {\r\n        // LEVEL 1\r\n\r\n        let expiration0 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 1).call()\r\n        ).toNumber();\r\n\r\n        if (expiration0 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(1).call()).toNumber() / 1000000;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration01 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 6).call()\r\n        ).toNumber();\r\n\r\n        if (expiration01 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(6).call()).toNumber() / 1000000;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (LEVEL2 != undefined) {\r\n      for await (const id of LEVEL2) {\r\n        let expiration1 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 2).call()\r\n        ).toNumber();\r\n\r\n        if (expiration1 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(2).call()).toNumber() / 1000000;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration2 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 7).call()\r\n        ).toNumber();\r\n\r\n        if (expiration2 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(7).call()).toNumber() / 1000000;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (LEVEL3 != undefined) {\r\n      for await (const id of LEVEL3) {\r\n        // LEVEL 2\r\n\r\n        let expiration3 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 3).call()\r\n        ).toNumber();\r\n\r\n        if (expiration3 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(3).call()).toNumber() / 1000000;\r\n        }\r\n\r\n        // LEVEL 7\r\n        let expiration4 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 8).call()\r\n        ).toNumber();\r\n\r\n        if (expiration4 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(8).call()).toNumber() / 1000000;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (LEVEL4 != undefined) {\r\n      for await (const id of LEVEL4) {\r\n        // LEVEL 3\r\n\r\n        let expiration5 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 4).call()\r\n        ).toNumber();\r\n\r\n        if (expiration5 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(4).call()).toNumber() / 1000000;\r\n        }\r\n\r\n        // LEVEL 8\r\n\r\n        let expiration6 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 9).call()\r\n        ).toNumber();\r\n\r\n        if (expiration6 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(9).call()).toNumber() / 1000000;\r\n        }\r\n      }\r\n\r\n      if (LEVEL5 != undefined) {\r\n        for await (const id of LEVEL5) {\r\n          // LEVEL 5\r\n          let expiration9 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 5).call()\r\n          ).toNumber();\r\n\r\n          if (expiration9 != 0) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(5).call()).toNumber() / 1000000;\r\n          }\r\n\r\n          // LEVEL 10\r\n          let expiration10 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 10).call()\r\n          ).toNumber();\r\n\r\n          if (expiration10 != 0) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(10).call()).toNumber() /\r\n              1000000;\r\n          }\r\n        }\r\n      }\r\n\r\n      // setcoinsCount(Totalcoins);\r\n    }\r\n    return Totalcoins;\r\n  };\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        // Set default address (foundation address) used for contract calls\r\n        // Directly overwrites the address object as TronLink disabled the\r\n        // function call\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(FOUNDATION_ADDRESS),\r\n          base58: FOUNDATION_ADDRESS,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(id),\r\n        base58: id,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        try {\r\n          await FetchData();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const [LevelsData, setLevelsData] = useState({});\r\n\r\n  const Buy = async (value, level) => {\r\n    const buytoast = toast.loading(\r\n      \"Waiting for Transaction Confirmation!! Data will get updated automatically\",\r\n      { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n    );\r\n    return await Utils.contract\r\n      .buyLevel(level)\r\n      .send({\r\n        feeLimit: 100_000_000,\r\n        callValue: 1000000 * value,\r\n        shouldPollResponse: true,\r\n      })\r\n      .then(async (res) => {\r\n        console.log(res);\r\n        await FetchData();\r\n        toast.success(\r\n          `Transaction confirmed successfully!! Level ${level} bought successfully`,\r\n          { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n        );\r\n        toast.remove(buytoast);\r\n      })\r\n      .catch(async (err) => {\r\n        if (err.error != \"Cannot find result in solidity node\") {\r\n          toast.remove(buytoast);\r\n\r\n          toast.error(`Transaction Failed!! Level ${level} purchase failed`, {\r\n            position: \"bottom-center\",\r\n            style: { marginTop: \"80px\" },\r\n          });\r\n        }\r\n\r\n        // Cannot find result in solidity node\r\n        console.log(err);\r\n        await FetchData();\r\n        console.log(err);\r\n        toast.remove(buytoast);\r\n\r\n        if (err.error == \"Cannot find result in solidity node\") {\r\n          toast.success(\r\n            `Transaction confirmed successfully!! Level ${level} bought successfully`,\r\n            { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  const FetchLevels = async (address) => {\r\n    let Temp = {};\r\n\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      Temp[`${level}`] = null;\r\n\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      if (\r\n        currentTimestamp.toNumber() > Date.now() &&\r\n        currentTimestamp.toNumber() != 0\r\n      ) {\r\n        Temp[`${level}`] = {\r\n          expired: true,\r\n          exipredAgo:\r\n            (new Date(currentTimestamp.toNumber()).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: false,\r\n          disabled: level == 1 ? false : true,\r\n        };\r\n      } else if (\r\n        currentTimestamp.toNumber() < Date.now() &&\r\n        currentTimestamp.toNumber() != 0\r\n      ) {\r\n        Temp[`${level}`] = {\r\n          expired: false,\r\n          exipredAgo:\r\n            (new Date(currentTimestamp.toNumber()).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: true,\r\n          disabled: false,\r\n        };\r\n      } else {\r\n        Temp[`${level}`] = {\r\n          expired: false,\r\n          exipredAgo:\r\n            (new Date(currentTimestamp.toNumber()).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: false,\r\n          disabled: true,\r\n        };\r\n      }\r\n    }\r\n\r\n    let TempActive = 0;\r\n    for await (const i of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      if (Temp[`${i}`].active == true) {\r\n        TempActive = i + 1;\r\n        if (Temp[`${TempActive}`] != undefined) {\r\n          Temp[`${TempActive}`][\"disabled\"] = false;\r\n        }\r\n      }\r\n    }\r\n    Temp[`${1}`][\"disabled\"] = false;\r\n\r\n    //if User in preview mode\r\n    if (previewId != null) {\r\n      for await (const i of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n        Temp[`${i}`][\"disabled\"] = true;\r\n      }\r\n    }\r\n\r\n    console.log(Temp);\r\n\r\n    return Temp;\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"con\">\r\n        <Toaster />\r\n\r\n        <h1 className=\"header\">Office</h1>\r\n        <div className=\"control\">\r\n          <div className=\"CoverDiv\">\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c40eb3142d68e3c2b7f8850_ring%20green.png\"\r\n                  width=\"43\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    <CountUp\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={coinsCount}\r\n                    />{\" \"}\r\n                    TRX\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Earned TRX</div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c43381379dc692ebfb3a76c_ring%20purple.png\"\r\n                  width=\"43\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    {\"$ \"}\r\n                    <CountUp\r\n                      decimals={6}\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={coinPrice * coinsCount}\r\n                    />\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Earned Dollar</div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c433812ff0f50fa752c8bb5_ring%20blue.png\"\r\n                  width=\"43\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    {\" \"}\r\n                    <CountUp\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={partnersList?.length}\r\n                    />\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Total Partners</div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c40eb3142d68e3c2b7f8850_ring%20green.png\"\r\n                  width=\"43\"\r\n                  id=\"LevelImage\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">{currentLevel}</strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Current Level</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"ChartDiv\">\r\n          <Chart data={chartData} />\r\n        </div>\r\n\r\n        {/* <Slidecontent /> */}\r\n\r\n        {/* <div className=\"charts\">\r\n          <div className=\"graph1\">\r\n            <Chart />\r\n          </div>\r\n          <br />\r\n          <div className=\"graph1\">\r\n            <Chart2 />\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n      <br />\r\n\r\n  \r\n      <div style={{justifyContent:LoadingLevels ? \"center\" : null,alignItems:LoadingLevels ? \"center\" : null,height:LoadingLevels ? \"18vw\":null}} className=\"level\">\r\n        \r\n        {!LoadingLevels?\r\n        <div className=\"row1\">\r\n          <div className={LevelsData[\"1\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 1</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"1\"]?.active\r\n                  ? \"Active\"\r\n                  : \"Expired\" + `-${LevelsData[\"2\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">300 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"1\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"1\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(300, 1)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"1\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"1\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n          <div className={LevelsData[\"2\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 2</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"2\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"2\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"2\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">600 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"2\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"2\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(600, 2)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"2\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"2\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n          <div className={LevelsData[\"3\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 3</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"3\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"3\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"3\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">1250 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"3\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"3\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(1250, 3)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"3\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"3\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n          <div className={LevelsData[\"4\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 4</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"4\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"4\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"4\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">2500 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"4\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"4\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(2500, 4)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"4\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"4\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n\r\n          <div className={LevelsData[\"5\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 5</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"5\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"5\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"5\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">5000 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"5\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"5\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(5000, 5)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"5\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"5\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n\r\n          <div className={LevelsData[\"6\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 6</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"6\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"6\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"6\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">10000 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"6\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"6\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(10000, 6)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"6\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"6\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n          <div className={LevelsData[\"7\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 7</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"7\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"7\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"7\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">25000 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"7\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"7\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(25000, 7)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"7\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"7\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n          <div className={LevelsData[\"8\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 8</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"8\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"8\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"8\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">50000 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"8\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"8\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(50000, 8)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"8\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"8\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n          <div className={LevelsData[\"9\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 9</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"9\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"9\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"9\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">100000 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"9\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"9\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(100000, 9)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"9\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"9\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n          <div className={LevelsData[\"10\"]?.expired ? \"card-expired\" : \"card\"}>\r\n            <center>\r\n              <div className=\"lvl\">Level 10</div>\r\n\r\n              <div className=\"days\">\r\n                {LevelsData[\"10\"]?.active\r\n                  ? \"Active\"\r\n                  : LevelsData[\"10\"]?.expired == false\r\n                  ? \"Inactive\"\r\n                  : \"Expired\" + `-${LevelsData[\"10\"]?.expiredAgo} days ago`}\r\n              </div>\r\n\r\n              <hr className=\"line\" />\r\n\r\n              <div class=\"levelval\">200000 TRX</div>\r\n\r\n              <button\r\n                disabled={LevelsData[\"10\"]?.disabled}\r\n                style={{ opacity: LevelsData[\"10\"]?.disabled ? 0.5 : 1 }}\r\n                onClick={() => Buy(200000, 10)}\r\n                className=\"btn\"\r\n              >\r\n                <p>\r\n                  {LevelsData[\"10\"]?.active\r\n                    ? \"Extend\"\r\n                    : LevelsData[\"10\"]?.expired\r\n                    ? \"Restore\"\r\n                    : \"Buy\"}\r\n                </p>\r\n              </button>\r\n            </center>\r\n          </div>\r\n        </div>\r\n\r\n        :\r\n        <Spinner variant=\"primary\" size=\"100px\" animation=\"border\" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Controlpanel;\r\n","export default __webpack_public_path__ + \"static/media/message.bc71e445.jpg\";","import React from 'react'\r\nimport \"./Message.css\"\r\nimport { AiFillBell } from 'react-icons/ai'\r\nimport message from './message.jpg';\r\nfunction Message(){\r\n    return(\r\n        <div className=\"Msg\">\r\n            <div className=\"msg-head\">\r\n                <div className=\"mh1\">\r\n                    <br/>\r\n                    DARK MODE\r\n                </div>\r\n                <div className=\"mh2\">\r\n                    <br/>\r\n                    <span className=\"mnoti\">NOTIFICATION TELEGRAM</span>\r\n                    < AiFillBell/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p className=\"mheading\">No authorization</p>\r\n            </div>\r\n            <div className=\"msgbox\">\r\n                <div className=\"boxhead\">\r\n                    <center><p className=\"headstyle\">In order to read your messages and be able to communicate with your partners and uplines, you must log in to your account through the “Auto Login” function.</p>\r\n                </center>\r\n                </div>\r\n                <div className=\"boxcontent\">\r\n                    <center><img src={message} className=\"msgimage\" alt=\"message\"></img>\r\n                    <p className=\"headstyle\">If you still have questions, you can ask other members in our <a target=\"_blank\"rel=\"noreferrer\" href=\"https://t.me/millionmoneychat\">Telegram Chat</a>.</p>\r\n                    </center>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, { useEffect, useState } from \"react\";\n\nconst Table = ({ data ,coinprice}) => {\n  const [tableData, settableData] = useState(data);\n  const [coinPrice, setcoinPrice] = useState(coinprice);\n\n  useEffect(() => {\n    settableData(data);\n    setcoinPrice(coinprice)\n    console.log(coinPrice);\n  }, [data,coinPrice]);\n\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <p className=\"linkname1\">Received</p>\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}} >SNo</th>\n              <th style={{minWidth:\"380px\"}}>From whom</th>\n              <th style={{minWidth:\"50px\"}}>ID</th>\n              <th style={{minWidth:\"220px\"}}>The amount of ETH</th>\n              <th style={{minWidth:\"80px\"}}>USD</th>\n            </tr>\n            {tableData.map((item, index) => (\n              <tr>\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">\n                  <a href=\"#\">{item.address}</a>\n                </td>\n                <td className=\"tbval\">{item.id}</td>\n                <td className=\"tbval\">{item.coins}</td>\n                <td className=\"tbval\">{item.coins*coinPrice.toFixed(4)}</td>\n              </tr>\n            ))}\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport \"./Tree.css\";\nconst baseTree = [\n  {\n    name: \"item1\",\n  },\n  {\n    name: \"item2\",\n    isOpen: true,\n    children: [\n      {\n        name: \"2-item1\",\n        isOpen: true,\n      },\n    ],\n  },\n  {\n    name: \"item3\",\n    isOpen: true,\n    children: [\n      {\n        name: \"3-item1\",\n      },\n      {\n        name: \"3-item2\",\n        isOpen: false,\n        children: [{ name: \"3.2-item 1\" }],\n      },\n    ],\n  },\n  {\n    name: \"item4\",\n    isOpen: true,\n    children: [\n      {\n        name: \"4-item1\",\n      },\n      {\n        name: \"4-item2\",\n        isOpen: true,\n        children: [{ name: \"4.2-item 1\" }],\n      },\n    ],\n  },\n];\n\nconst TreeLine = styled.button`\n  font-family: Menlo, Consolas, monospace;\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  text-transform: uppercase;\n`;\n\nfunction AddItem({ parent, funcs }) {\n  return (\n    <li>\n      <TreeLine onClick={() => funcs.addChild(parent)}>+</TreeLine>\n    </li>\n  );\n}\n\nfunction TreeItem({ item, funcs }) {\n  const { toggleOpen, makeParent } = funcs;\n  return (\n    <li>\n      <TreeLine\n        onClick={() => toggleOpen(item)}\n        onDoubleClick={() => makeParent(item)}\n      >\n        {item.children && <span>{item.isOpen ? \"-\" : \"+\"}</span>}\n        {item.name}\n      </TreeLine>\n      {item.children && item.isOpen && (\n        <TreeList item={item} tree={item.children} funcs={funcs} />\n      )}\n    </li>\n  );\n}\n\nfunction TreeList({ item, tree, funcs }) {\n  return (\n    <ul>\n      {tree.map((child) => (\n        <TreeItem item={child} funcs={funcs} />\n      ))}\n      {/* <AddItem parent={item} funcs={funcs} /> */}\n    </ul>\n  );\n}\n\nfunction Tree({data}) {\n  const [tree, setTree] = useState(data);\n\n  useEffect(()=>{\n    setTree(data)\n  },[data])\n\n  console.log(data);\n\n  const toggleOpen = (item) => {\n    const newTree = [...tree];\n    item.isOpen = !item.isOpen;\n    setTree(newTree);\n  };\n  const makeParent = (item) => {\n    const newTree = [...tree];\n    item.children = [];\n    setTree(newTree);\n  };\n  const addChild = (parent) => {\n    const newTree = [...tree];\n    if (!parent) {\n      newTree.push({ name: \"New Item\" });\n    } else {\n      parent.children.push({ name: \"New Item\" });\n    }\n    setTree(newTree);\n  };\n\n  const funcs = {\n    toggleOpen,\n    addChild,\n    makeParent,\n  };\n  return (\n    <div className=\"Tree\">\n      <TreeList tree={tree} funcs={funcs} />\n    </div>\n  );\n}\n\nexport default Tree;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'partnersLevelJson',\n  initialState: {\n    value: {},\n  },\n  reducers: {\n    tooglePartnersLevelJson: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { tooglePartnersLevelJson } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getPartnersLevelJson = state => state.partnersLevelJson.value;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Partners.css\";\r\nimport { AiFillBell } from \"react-icons/ai\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Table from \"../Table/Table\";\r\nimport Tree from \"../Tree/Tree\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { getPartnersLevelJson } from \"../Redux/Reducer/PartnersLevelJson\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { getuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Partners() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n  const [searchId, setsearchId] = useState(\"\");\r\n\r\n  const [LoadingStruct, setLoadingStruct] = useState(true);\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n\r\n  const [searchPartnerData, setsearchPartnerData] = useState({});\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [treeData, settreeData] = useState([]);\r\n  const [TableData, setTableData] = useState([]);\r\n  const userID = useSelector(getuserId);\r\n\r\n  // const levelJson = useSelector(getPartnersLevelJson);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setcoinPrice(data.tron.usd);\r\n      });\r\n  };\r\n\r\n  let TotalPartnersCount = 0;\r\n\r\n  const FetchTree = async (id, TREEDATA) => {\r\n    await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        TotalPartnersCount += items.length;\r\n\r\n        var item = {};\r\n\r\n        if (items.length > 0) {\r\n          var temp = [];\r\n          for await (const item of items) {\r\n            let e = await Hex_to_base58(item);\r\n            temp.push(e);\r\n          }\r\n\r\n          item = {\r\n            name: id,\r\n            children: temp,\r\n          };\r\n          TREEDATA[`${id}`] = temp;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          await FetchTree(e, TREEDATA);\r\n        }\r\n      });\r\n\r\n    return TREEDATA;\r\n  };\r\n\r\n  const ProccessTreeData = async (data, id, temp) => {\r\n    const id_to_num = await Utils.contract.users(id).call();\r\n    const resId = await Promise.resolve(id_to_num[1].toNumber());\r\n    temp = {\r\n      name: resId,\r\n    };\r\n    if (id in data) {\r\n      const fetch = data[id].map(async (i) => {\r\n        return ProccessTreeData(data, i, temp);\r\n      });\r\n      const response = await Promise.all(fetch);\r\n      temp[\"children\"] = response;\r\n    } else {\r\n      temp[\"name\"] = resId;\r\n    }\r\n\r\n    console.log(temp);\r\n\r\n    return temp;\r\n    // if(data[0]?.children){\r\n    //   ProccessTreeData(data[0]?.children)\r\n    // }\r\n    // return ans\r\n  };\r\n\r\n  let PartnersArray = [];\r\n  let LevelJSON = {};\r\n\r\n  var LEVEL = 0;\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const calculate_CoinsFromLevels = async (data) => {\r\n    let TempData = [];\r\n\r\n    let LEVEL1 = data[\"1\"];\r\n    let LEVEL2 = data[\"2\"];\r\n    let LEVEL3 = data[\"3\"];\r\n    let LEVEL4 = data[\"4\"];\r\n    let LEVEL5 = data[\"5\"];\r\n\r\n    if (LEVEL1 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL1) {\r\n        // LEVEL 1\r\n        // temp[\"address\"] = id;\r\n\r\n        let expiration0 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 1).call()\r\n        ).toNumber();\r\n\r\n        if (expiration0 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(1).call()).toNumber() / 1000000;\r\n\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration01 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 6).call()\r\n        ).toNumber();\r\n\r\n        if (expiration01 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(6).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL2 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL2) {\r\n        let expiration1 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 2).call()\r\n        ).toNumber();\r\n\r\n        if (expiration1 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(2).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration2 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 7).call()\r\n        ).toNumber();\r\n\r\n        if (expiration2 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(7).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL3 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL3) {\r\n        // LEVEL 2\r\n\r\n        let expiration3 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 3).call()\r\n        ).toNumber();\r\n\r\n        if (expiration3 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(3).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 7\r\n        let expiration4 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 8).call()\r\n        ).toNumber();\r\n\r\n        if (expiration4 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(8).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL4 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL4) {\r\n        // LEVEL 3\r\n\r\n        let expiration5 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 4).call()\r\n        ).toNumber();\r\n\r\n        if (expiration5 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(4).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 8\r\n\r\n        let expiration6 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 9).call()\r\n        ).toNumber();\r\n\r\n        if (expiration6 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(9).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n\r\n      if (LEVEL5 != undefined) {\r\n        let Totalcoins = 0;\r\n        let tempArray = [];\r\n\r\n        for await (const id of LEVEL5) {\r\n          // LEVEL 4\r\n          let expiration7 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 5).call()\r\n          ).toNumber();\r\n\r\n          if (expiration7 != 0) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(5).call()).toNumber() / 1000000;\r\n            tempArray.push({ address: id, coins: Totalcoins });\r\n            Totalcoins = 0;\r\n          }\r\n\r\n          // LEVEL 9\r\n          let expiration8 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 10).call()\r\n          ).toNumber();\r\n\r\n          if (expiration8 != 0) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(10).call()).toNumber() /\r\n              1000000;\r\n            tempArray.push({ address: id, coins: Totalcoins });\r\n            Totalcoins = 0;\r\n          }\r\n        }\r\n        TempData = [...TempData, ...tempArray];\r\n      }\r\n\r\n      // setcoinsCount(Totalcoins);\r\n    }\r\n    return TempData;\r\n  };\r\n\r\n  const PreProcessData = async (data) => {\r\n    let temp = [];\r\n    for await (const item of data) {\r\n      const id_to_num = await Utils.contract.users(item.address).call();\r\n      const data = await Promise.resolve(id_to_num);\r\n\r\n      const id = data[1].toNumber();\r\n      temp.push({ address: item.address, id: id, coins: item.coins });\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const FetchPayments = async (id, count) => {\r\n    ++LEVEL;\r\n\r\n    if (count == PartnersArray.length) {\r\n      // console.log(count, PartnersArray.length);\r\n      // console.log(LevelJSON);\r\n      // console.log(LEVEL);\r\n      return await calculate_CoinsFromLevels(LevelJSON).then(async (res) => {\r\n        await PreProcessData(res).then((result) => {\r\n          setTableData(result);\r\n          setLoadingTable(false);\r\n        });\r\n      });\r\n      // return;\r\n    } else {\r\n      Utils.contract\r\n        .viewUserReferral(id)\r\n        .call()\r\n        .then(async (items) => {\r\n          PartnersArray = [...PartnersArray, ...items];\r\n\r\n          if (LEVEL == 1) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 2) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 3) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 4) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 5) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          }\r\n\r\n          if (items.length > 0) {\r\n            for await (const item of items) {\r\n              let e = await Hex_to_base58(item);\r\n              if (e == undefined || !e) return;\r\n\r\n              await FetchPayments(e, count);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        // Set default address (foundation address) used for contract calls\r\n        // Directly overwrites the address object as TronLink disabled the\r\n        // function call\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(FOUNDATION_ADDRESS),\r\n          base58: FOUNDATION_ADDRESS,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        await FetchTree(walletId, {}).then(async (e) => {\r\n          await ProccessTreeData(e, walletId, {}).then(async (res) => {\r\n            settreeData([res]);\r\n            setLoadingStruct(false);\r\n\r\n            await FetchPayments(walletId, TotalPartnersCount);\r\n            // console.log(res);\r\n          });\r\n        });\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const SearchAboutPartner = async () => {\r\n    try {\r\n      if (searchId.trim().length == 0) {\r\n        return toast.error(\"Please enter valid RefId/address\", {\r\n          style: { marginTop: \"70px\" },\r\n        });\r\n      }\r\n\r\n      // if string is address\r\n      if (/[a-zA-Z]/.test(searchId)) {\r\n        const LoadUserExist = await Utils.contract.users(searchId).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist[0] == false) {\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n\r\n        const currentLevel = await getcurrentLevel(searchId);\r\n        setsearchPartnerData({\r\n          id: userexist[1].toString(),\r\n          address: searchId,\r\n          level: currentLevel,\r\n        });\r\n\r\n        console.log(userexist[0]);\r\n      } else {\r\n        const LoadUserAddress = await Utils.contract\r\n          .userList(JSON.parse(searchId))\r\n          .call();\r\n        const userAddress = await Promise.resolve(LoadUserAddress);\r\n\r\n        const LoadUserExist = await Utils.contract.users(userAddress).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist[0] == false) {\r\n          return toast.error(\"User does not exist\", {\r\n            style: { marginTop: \"70px\" },\r\n          });\r\n        }\r\n        const currentLevel = await getcurrentLevel(userAddress);\r\n        setsearchPartnerData({\r\n          id: userexist[1].toString(),\r\n          address: userAddress,\r\n          level: currentLevel,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getcurrentLevel = async (address) => {\r\n    let currentLevel = 0;\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      if (\r\n        currentTimestamp.toNumber() < Date.now() &&\r\n        currentTimestamp.toNumber() != 0\r\n      ) {\r\n        ++currentLevel;\r\n      }\r\n    }\r\n    return currentLevel;\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <Toaster />\r\n      <div>\r\n        <p className=\"header\">Partners</p>\r\n      </div>\r\n\r\n      <div className=\"linkbox\">\r\n        <div className=\"linkInside\">\r\n          <div className=\"content\">\r\n            <p className=\"linkname1\">Your Affilate Link</p>\r\n            <br />\r\n\r\n            <input\r\n              className=\"link1\"\r\n              readOnly={true}\r\n              value={`${window.location.origin}/register/${userID}`}\r\n            />\r\n            <br />\r\n            <button onClick={()=>{navigator.clipboard.writeText(`${window.location.origin}/register/${userID}`);toast.success(\"Copied to clipboard\",{style:{marginTop:\"65px\"}})}} className=\"copybtn\">Copy Link</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginLeft: width >= 1100 ? \"30px\" : \"0\",\r\n            marginTop: width >= 1100 ? \"0\" : \"20px\",\r\n          }}\r\n          className=\"linkInside\"\r\n        >\r\n          <div className=\"content\">\r\n            {width >= 1100 ? (\r\n              <>\r\n                <p className=\"linkname1\">Data about partner</p>\r\n                <br />\r\n                <div className=\"Inline\">\r\n                  <input\r\n                    value={searchId}\r\n                    onChange={(e) => setsearchId(e.target.value)}\r\n                    className={\"link2\"}\r\n                  />\r\n                  <span>\r\n                    <button\r\n                      onClick={() => SearchAboutPartner()}\r\n                      className=\"copybtn\"\r\n                    >\r\n                      Search\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div style={{ width: \"100%\" }}>\r\n                <p className=\"linkname1\">Data about partner</p>\r\n                <br />\r\n                <input\r\n                  value={searchId}\r\n                  onChange={(e) => setsearchId(e.target.value)}\r\n                  style={{ width: \"100%\" }}\r\n                  className={\"link1\"}\r\n                />\r\n                <span>\r\n                  <button\r\n                    onClick={() => SearchAboutPartner()}\r\n                    style={{ marginTop: \"10px\" }}\r\n                    className=\"copybtn\"\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            )}\r\n\r\n            <br />\r\n            <div className=\"PartnerList\">\r\n              {searchPartnerData?.id && (\r\n                <div class=\"partner__info\">\r\n                  ID: <b>{searchPartnerData?.id}</b> &nbsp;&nbsp;&nbsp; Level:{\" \"}\r\n                  <b>{searchPartnerData?.level}</b> &nbsp;&nbsp;&nbsp; Address:\r\n                  {searchPartnerData?.address}{\" \"}\r\n                  <a\r\n                    href=\"https://etherscan.io/address/0xa7d7043df066a9fd0fc277a1d48bc07d43714557 \"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i class=\"fa fa-external-link-alt\"></i>\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"structure\">\r\n        <p className=\"linkname1\">Your structure</p>\r\n        {/* <a href=\"#\">To expand\\collapse all</a> */}\r\n        <div className=\"TreeDiv\">\r\n          {!LoadingStruct ? (\r\n            <Tree data={treeData} />\r\n          ) : (\r\n            <Spinner\r\n              variant=\"primary\"\r\n              size=\"100px\"\r\n              animation=\"border\"\r\n              role=\"status\"\r\n            >\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          )}\r\n        </div>\r\n        {!LoadingTable ? (\r\n          <Table data={TableData} coinprice={coinPrice} />\r\n        ) : (\r\n          <Spinner\r\n            variant=\"primary\"\r\n            size=\"100px\"\r\n            animation=\"border\"\r\n            role=\"status\"\r\n          >\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Partners;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Table = ({ data,LoadingTable }) => {\n  const [tableData, settableData] = useState(data);\n  useEffect(() => {\n    settableData(data);\n  }, [data]);\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          {!LoadingTable ?\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}} >Line</th>\n              <th style={{minWidth:\"50px\"}}>ID</th>\n              <th style={{minWidth:\"380px\"}}>Wallet</th>\n              <th style={{minWidth:\"50px\"}}>Level</th>\n            </tr>\n            {tableData.map((item, index) => (\n              <tr>\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">{item.id}</td>\n                <td className=\"tbval\">\n                  <a href=\"#\">{item.address}</a>\n                </td>\n                <td className=\"tbval\">{item.currentLevel}</td>\n              </tr>\n            ))}\n          </table>\n\n          : (\n        <Spinner\n          variant=\"primary\"\n          size=\"100px\"\n          animation=\"border\"\n          role=\"status\"\n        >\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Uplines.css\";\r\nimport Table from \"./Table\";\r\nimport Tree from \"../Tree/Tree\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport TronWeb from \"tronweb\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Uplines() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [data, setdata] = useState([]);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n  }, []);\r\n\r\n  const FetchData = async (address) => {\r\n    const id_to_num = await Utils.contract.users(address).call();\r\n    const data = await Promise.resolve(id_to_num);\r\n\r\n    // const id = data[1].toNumber()\r\n    const refId = data[2].toNumber();\r\n    console.log(refId);\r\n\r\n    let userAddress = (await Utils.contract.userList(refId).call()).toString();\r\n\r\n    userAddress = await Hex_to_base58(userAddress);\r\n    await currentLevel(userAddress).then((res) => {\r\n      setdata([{ id: refId, address: userAddress, currentLevel: res }]);\r\n      setLoadingTable(false)\r\n    });\r\n\r\n    return;\r\n  };\r\n\r\n  const currentLevel = async (address) => {\r\n    let currentLevel = 0;\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      if (currentTimestamp.toNumber() < Date.now() && currentTimestamp.toNumber() != 0) {\r\n        ++currentLevel;\r\n      }\r\n    }\r\n    return currentLevel;\r\n  };\r\n\r\n  // const ProccessTreeData = async (data, id, temp) => {\r\n  // const id_to_num = await Utils.contract.users(id).call();\r\n  // const resId = await Promise.resolve(id_to_num[1].toNumber());\r\n  //   temp = {\r\n  //     name: resId,\r\n  //   };\r\n  //   if (id in data) {\r\n  //     const fetch = data[id].map(async (i) => {\r\n  //       return ProccessTreeData(data, i, temp);\r\n  //     });\r\n  //     const response = await Promise.all(fetch);\r\n  //     temp[\"children\"] = response;\r\n  //   } else {\r\n  //     temp[\"name\"] = resId;\r\n  //   }\r\n\r\n  //   console.log(temp);\r\n\r\n  //   return temp;\r\n  // };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(FOUNDATION_ADDRESS),\r\n          base58: FOUNDATION_ADDRESS,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        await FetchData(walletId, {}).then(\r\n          async (e) => {}\r\n        );\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Uplines\">\r\n      <div>\r\n        <p className=\"header\">Uplines</p>\r\n      </div>\r\n\r\n      <Table LoadingTable={LoadingTable} data={data} />\r\n    </div>\r\n  );\r\n}\r\nexport default Uplines;\r\n\r\n// import React from \"react\";\r\n// import \"./Uplines.css\";\r\n// import { AiFillBell } from \"react-icons/ai\";\r\n// import { FaSearch } from \"react-icons/fa\";\r\n// import Table from \"./Table\";\r\n// import Tree from \"../Tree/Tree\";\r\n// function Uplines() {\r\n\r\n//   return (\r\n// <div className=\"Uplines\">\r\n//   <div>\r\n//     <p className=\"header\">Uplines</p>\r\n//   </div>\r\n\r\n//   <Table />\r\n// </div>\r\n//   );\r\n// }\r\n// export default Uplines;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Table = ({ data, coinprice,LoadingTable }) => {\n  const [tableData, settableData] = useState(data);\n  const [coinPrice, setcoinPrice] = useState(coinprice);\n\n  useEffect(() => {\n    settableData(data);\n    setcoinPrice(coinprice);\n  }, [data, coinPrice]);\n\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          {!LoadingTable ?\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}}>Date</th>\n              <th style={{minWidth:\"380px\"}}>From whom</th>\n              <th style={{minWidth:\"50px\"}}>ID</th>\n              <th style={{minWidth:\"220px\"}}>The amount of ETH</th>\n              <th style={{minWidth:\"50px\"}}>USD</th>\n            </tr>\n\n            {tableData.map((item, index) => (\n              <tr>\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">\n                  <a href=\"#\">{item.address}</a>\n                </td>\n                <td className=\"tbval\">{item.id}</td>\n                <td className=\"tbval\">{item.coins}</td>\n                <td className=\"tbval\">{item.coins * coinPrice.toFixed(4)}</td>\n              </tr>\n            ))}\n          </table>\n          :\n        <Spinner variant=\"primary\" size=\"100px\" animation=\"border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n      }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Lostprofits.css\";\r\nimport Table from \"./Table\";\r\nimport { AiFillBell } from \"react-icons/ai\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { getPartnersLevelJson } from \"../Redux/Reducer/PartnersLevelJson\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Lostprofits() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [treeData, settreeData] = useState([]);\r\n  const [TableData, setTableData] = useState([]);\r\n\r\n  // const levelJson = useSelector(getPartnersLevelJson);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setcoinPrice(data.tron.usd);\r\n      });\r\n  };\r\n\r\n  let TotalPartnersCount = 0;\r\n\r\n  const FetchTree = async (id, TREEDATA) => {\r\n    console.log(id,\"HI\");\r\n    await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        TotalPartnersCount += items.length;\r\n\r\n        var item = {};\r\n\r\n        if (items.length > 0) {\r\n          var temp = [];\r\n          for await (const item of items) {\r\n            let e = await Hex_to_base58(item);\r\n            temp.push(e);\r\n          }\r\n\r\n          item = {\r\n            name: id,\r\n            children: temp,\r\n          };\r\n          TREEDATA[`${id}`] = temp;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          await FetchTree(e, TREEDATA);\r\n        }\r\n      });\r\n\r\n    return TREEDATA;\r\n  };\r\n\r\n  const ProccessTreeData = async (data, id, temp) => {\r\n    const id_to_num = await Utils.contract.users(id).call();\r\n    const resId = await Promise.resolve(id_to_num[1].toNumber());\r\n    temp = {\r\n      name: resId,\r\n    };\r\n    if (id in data) {\r\n      const fetch = data[id].map(async (i) => {\r\n        return ProccessTreeData(data, i, temp);\r\n      });\r\n      const response = await Promise.all(fetch);\r\n      temp[\"children\"] = response;\r\n    } else {\r\n      temp[\"name\"] = resId;\r\n    }\r\n\r\n    console.log(temp);\r\n\r\n    return temp;\r\n    // if(data[0]?.children){\r\n    //   ProccessTreeData(data[0]?.children)\r\n    // }\r\n    // return ans\r\n  };\r\n\r\n  let PartnersArray = [];\r\n  let LevelJSON = {};\r\n\r\n  var LEVEL = 0;\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const calculate_CoinsFromLevels = async (data) => {\r\n    let TempData = [];\r\n\r\n    let LEVEL1 = data[\"1\"];\r\n    let LEVEL2 = data[\"2\"];\r\n    let LEVEL3 = data[\"3\"];\r\n    let LEVEL4 = data[\"4\"];\r\n    let LEVEL5 = data[\"5\"];\r\n\r\n    if (LEVEL1 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL1) {\r\n        // LEVEL 1\r\n        // temp[\"address\"] = id;\r\n\r\n        let expiration0 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 1).call()\r\n        ).toNumber();\r\n\r\n        if (expiration0 != 0 && expiration0 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(1).call()).toNumber() / 1000000;\r\n\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration01 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 6).call()\r\n        ).toNumber();\r\n\r\n        if (expiration01 != 0 && expiration0 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(6).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL2 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL2) {\r\n        let expiration1 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 2).call()\r\n        ).toNumber();\r\n\r\n        if (expiration1 != 0 && expiration1 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(2).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration2 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 7).call()\r\n        ).toNumber();\r\n\r\n        if (expiration2 != 0 && expiration2 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(7).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL3 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL3) {\r\n        // LEVEL 2\r\n\r\n        let expiration3 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 3).call()\r\n        ).toNumber();\r\n\r\n        if (expiration3 != 0 && expiration3 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(3).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 7\r\n        let expiration4 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 8).call()\r\n        ).toNumber();\r\n\r\n        if (expiration4 != 0 && expiration4 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(8).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL4 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL4) {\r\n        // LEVEL 3\r\n\r\n        let expiration5 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 4).call()\r\n        ).toNumber();\r\n\r\n        if (expiration5 != 0 && expiration5 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(4).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 8\r\n\r\n        let expiration6 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 9).call()\r\n        ).toNumber();\r\n\r\n        if (expiration6 != 0 && expiration6 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(9).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n\r\n      if (LEVEL5 != undefined) {\r\n        let Totalcoins = 0;\r\n        let tempArray = [];\r\n\r\n        for await (const id of LEVEL5) {\r\n          // LEVEL 4\r\n          let expiration7 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 5).call()\r\n          ).toNumber();\r\n\r\n          if (expiration7 != 0 && expiration7 > Date.now()) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(5).call()).toNumber() / 1000000;\r\n            tempArray.push({ address: id, coins: Totalcoins });\r\n            Totalcoins = 0;\r\n          }\r\n\r\n          // LEVEL 9\r\n          let expiration8 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 10).call()\r\n          ).toNumber();\r\n\r\n          if (expiration8 != 0 && expiration8 > Date.now()) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(10).call()).toNumber() /\r\n              1000000;\r\n            tempArray.push({ address: id, coins: Totalcoins });\r\n            Totalcoins = 0;\r\n          }\r\n        }\r\n        TempData = [...TempData, ...tempArray];\r\n      }\r\n\r\n      // setcoinsCount(Totalcoins);\r\n    }\r\n    return TempData;\r\n  };\r\n\r\n  const PreProcessData = async (data) => {\r\n    let temp = [];\r\n    for await (const item of data) {\r\n\r\n\r\n      const id_to_num = await Utils.contract.users(item.address).call();\r\n      const data = await Promise.resolve(id_to_num);\r\n\r\n      const id = data[1].toNumber();\r\n      \r\n      temp.push({ address: item.address, id: id, coins: item.coins });\r\n    }\r\n\r\n\r\n\r\n    return temp;\r\n  };\r\n\r\n  const FetchPayments = async (id, count) => {\r\n    ++LEVEL;\r\n\r\n    if (count == PartnersArray.length) {\r\n      // console.log(count, PartnersArray.length);\r\n      // console.log(LevelJSON);\r\n      // console.log(LEVEL);\r\n      return await calculate_CoinsFromLevels(LevelJSON).then(async (res) => {\r\n        await PreProcessData(res).then((result) => {\r\n          console.log(result);\r\n          setTableData(result);\r\n          setLoadingTable(false)\r\n        });\r\n      });\r\n      // return;\r\n    } else {\r\n      Utils.contract\r\n        .viewUserReferral(id)\r\n        .call()\r\n        .then(async (items) => {\r\n          PartnersArray = [...PartnersArray, ...items];\r\n\r\n          if (LEVEL == 1) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 2) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 3) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 4) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 5) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          }\r\n\r\n          if (items.length > 0) {\r\n            for await (const item of items) {\r\n              let e = await Hex_to_base58(item);\r\n              if (e == undefined || !e) return;\r\n\r\n              await FetchPayments(e, count);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        // Set default address (foundation address) used for contract calls\r\n        // Directly overwrites the address object as TronLink disabled the\r\n        // function call\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(walletId),\r\n          base58: walletId,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        await FetchTree(walletId, {}).then(\r\n          async (e) => {\r\n            await ProccessTreeData(\r\n              e,\r\n              walletId,\r\n              {}\r\n            ).then(async (res) => {\r\n              settreeData([res]);\r\n              await FetchPayments(\r\n                walletId,\r\n                TotalPartnersCount\r\n              );\r\n              // console.log(res);\r\n            });\r\n          }\r\n        );\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Lostprofits\">\r\n      <div>\r\n        <p className=\"header\">Lostprofits</p>\r\n      </div>\r\n\r\n      <Table LoadingTable={LoadingTable} data={TableData}  coinprice={coinPrice} />\r\n    </div>\r\n  );\r\n}\r\nexport default Lostprofits;\r\n","import React, { useState } from \"react\";\nimport \"./Sidenavbar.css\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { AiFillMessage } from \"react-icons/ai\";\nimport { FaNetworkWired } from \"react-icons/fa\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { FaSearchDollar } from \"react-icons/fa\";\nimport { IoIosSend } from \"react-icons/io\";\nimport { BsBoxArrowRight } from \"react-icons/bs\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toogleMenu, getTooglemenu } from \"../Redux/Reducer/MenuReducer\";\n\nfunction Sidenavbarmobile() {\n  const [openMenu, setopenMenu] = useState(false);\n\n  const menu = useSelector(getTooglemenu);\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n\n  const PATHNAME = () => location?.pathname?.toLowerCase();\n\n  const VALIDROUTE = (path) => (PATHNAME(path) == path ? true : false);\n\n  return (\n    <Offcanvas show={menu} onHide={() => dispatch(toogleMenu(!menu))}>\n      <Offcanvas.Header closeButton>\n        <Offcanvas.Title>Smart Genie</Offcanvas.Title>\n      </Offcanvas.Header>\n      <Offcanvas.Body>\n        <div style={{ width: \"100%\" }} className=\"sidenav\">\n          <div className=\"sidebarcontainer\">\n            <div className=\"menu\">\n              <ul className=\"sidebarlist\">\n                <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={VALIDROUTE(\"/\") ? \"Link-Active\" : \"Link\"}\n                  to=\"/\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/\") ? (\n                        <img\n                          src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c56c4a24ed7964135f087b1_Account%20dark.svg\"\n                          width=\"24\"\n                          alt=\"\"\n                          class=\"sidemenu_button_icon\"\n                        />\n                      ) : (\n                        <img\n                          src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c3f8723a6538c3f77d63a3c_Account.png\"\n                          width=\"24\"\n                          alt=\"\"\n                          class=\"sidemenu_button_icon\"\n                        />\n                      )}\n                    </span>\n                    Control Panel\n                  </li>\n                </Link>\n\n                <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={VALIDROUTE(\"/partners\") ? \"Link-Active\" : \"Link\"}\n                  to=\"/Partners\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/partners\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/partners\") ? (\n                        <img src=\"https://img.icons8.com/small/24/000000/tree-structure.png\" />\n                      ) : (\n                        <img src=\"https://img.icons8.com/small/24/ffffff/tree-structure.png\" />\n                      )}\n                    </span>\n                    Partners\n                  </li>\n                </Link>\n                <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={VALIDROUTE(\"/uplines\") ? \"Link-Active\" : \"Link\"}\n                  to=\"/Uplines\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/uplines\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/uplines\") ? (\n                        <img src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/24/000000/external-users-cv-resume-flatart-icons-outline-flatarticons.png\" />\n                      ) : (\n                        <img src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/24/ffffff/external-users-cv-resume-flatart-icons-outline-flatarticons.png\" />\n                      )}\n                    </span>\n                    Uplines\n                  </li>\n                </Link>\n                <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={\n                    VALIDROUTE(\"/lostprofits\") ? \"Link-Active\" : \"Link\"\n                  }\n                  to=\"/Lostprofits\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li\n                    style={{\n                      color: VALIDROUTE(\"/lostprofits\") ? \"white\" : null,\n                    }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/lostprofits\") ? (\n                        <img src=\"https://img.icons8.com/fluency-systems-filled/24/000000/search-dollar.png\" />\n                      ) : (\n                        <img src=\"https://img.icons8.com/fluency-systems-filled/24/ffffff/search-dollar.png\" />\n                      )}\n                    </span>\n                    Lost profits\n                  </li>\n                </Link>\n                <li\n                  style={{ color: VALIDROUTE(\"/promo\") ? \"white\" : null }}\n                  className=\"sidebaritems\"\n                >\n                  <span className=\"icon\">\n                    <IoIosSend size={24} />\n                  </span>\n                  promo\n                </li>\n\n                <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={\"Link\"}\n                  to=\"/auth\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li className=\"sidebaritems\">\n                    <span className=\"icon\">\n                      <BsBoxArrowRight size={24} />\n                    </span>\n                    Logout\n                  </li>\n                </Link>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </Offcanvas.Body>\n    </Offcanvas>\n  );\n}\nexport default Sidenavbarmobile;\n","import React, { useEffect, useState } from \"react\";\nimport Topbar from \"../Components/topbar/Topbar\";\nimport Sidenavbar from \"../Components/Sidenavbar/Sidenavbar\";\nimport \"../App.css\";\nimport Controlpanel from \"../Components/Control_Panel/Controlpanel\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Message from \"../Components/Message/Message\";\nimport Partners from \"../Components/Partners/Partners\";\nimport Uplines from \"../Components/Uplines/Uplines\";\nimport Lostprofits from \"../Components/Lostprofits/Lostprofits\";\nimport Login from \"../Components/Login/Login\";\nimport ScrollMemory$1 from \"react-router-scroll-memory\";\nimport useWindowDimensions from \"../Tools/WindowDimensions\";\nimport Sidenavbarmobile from \"../Components/Sidenavbar/Sidenavbarmobile\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toogleAuth } from \"../Components/Redux/Reducer/AuthReducer\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { getPreviewModeId } from \"../Components/Redux/Reducer/PreviewMode\";\n\nfunction Console() {\n  const { height, width } = useWindowDimensions();\n  const dispatch = useDispatch();\n  const previewId = useSelector(getPreviewModeId);\n\n  useEffect(() => {\n    document.title = \"Console\";\n\n    if (previewId) {\n      return;\n    }\n\n    const DISCONNECT_EMIT = setInterval(() => {\n      // console.log(window.tronLnk?.tronWeb);\n      if (window.tronLink?.tronWeb == false) {\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\n\n        // dispatch(toogleAuth(\"LOGGEDOUT\"))\n        // window.location.reload();\n      }\n      if (window?.tronLink?.tronWeb) {\n        dispatch(toogleAuth(\"LOGGEDIN\"));\n        // alert(\"YES\")\n      }\n    }, 1000);\n\n    return () => clearInterval(DISCONNECT_EMIT);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ScrollMemory$1 />\n\n      {width >= 850 ? <Sidenavbar /> : <Sidenavbarmobile />}\n\n      <div\n        className={width >= 850 ? \"ControlPanel\" : \"ControlPanel-SmallScreen \"}\n      >\n        <Topbar />\n\n        <div className=\"MainDiv\">\n          <Route component={Controlpanel} exact path=\"/\" />\n          <Route component={Message} path=\"/Message\" />\n          <Route component={Partners} path=\"/Partners\" />\n          <Route component={Uplines} path=\"/Uplines\" />\n          <Route component={Lostprofits} path=\"/Lostprofits\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Console;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Auth from \"./Routes/Auth\";\nimport Console from \"./Routes/Console\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport { getAuth, toogleAuth } from \"./Components/Redux/Reducer/AuthReducer\";\n\nconst App = () => {\n  const authStatus = useSelector(getAuth);\n \n\n  // useEffect(() => {\n  //   if (authStatus == \"LOGGEDOUT\") {\n  //     if (window.location.pathname != \"/\") {\n  //       window.location.href = \"/\";\n  //     }\n  //   }\n  // }, [authStatus]);\n\n  if (window?.tronWeb) {\n    window?.tronWeb.on(\"addressChanged\", (e) => {\n      window.location.reload();\n    });\n  }\n\n  return (\n      <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <Toaster/>\n        {/* {access ? <Redirect to={\"/\"} /> : <Redirect to={\"/login\"} />} */}\n        <Route\n          to={\"/\"}\n          render={() => (authStatus == \"LOGGEDIN\" ? <Console /> : <Auth />)}\n        />\n      </BrowserRouter>\n  );\n};\n\nexport default App;\n\n// <div className=\"container1\">\n// <Switch>\n//   <Route exact path=\"/\">\n//     <div className=\"con2\">\n//       {/* <Topbar /> */}\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Controlpanel />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Message\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Message />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Partners\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Partners />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Uplines\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Uplines />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Lostprofits\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Lostprofits />\n//       </div>\n//     </div>\n//   </Route>\n\n//   <Route path=\"/auth\">\n//     <Login />\n//   </Route>\n// </Switch>\n// </div>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport MenuReducer from './Reducer/MenuReducer';\nimport AuthReducer from './Reducer/AuthReducer';\nimport PartnersLevelJson from './Reducer/PartnersLevelJson';\nimport PreviewMode from './Reducer/PreviewMode';\nimport UserId from './Reducer/UserId';\n\n\nexport default configureStore({\n  reducer: {\n    menu: MenuReducer,\n    auth:AuthReducer,\n    partnersLevelJson:PartnersLevelJson,\n    previewModeId:PreviewMode,\n    userId:UserId\n\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ScrollToTop from \"./Tools/ScrollToTop\";\nimport ScrollMemory$1 from \"react-router-scroll-memory\";\nimport { Provider } from \"react-redux\";\n\nimport Store from \"./Components/Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}