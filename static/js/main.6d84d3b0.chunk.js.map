{"version":3,"sources":["Components/Login/logimg.jpg","Components/Login/logm.jpg","Utils/index.js","Assets/tronlink.png","Components/Wallets/ConnectWallet.js","Tools/WindowDimensions.js","Components/Redux/Reducer/AuthReducer.js","Utils/Converter.js","Components/Redux/Reducer/PreviewMode.js","Components/Redux/Reducer/UserId.js","Components/Login/Login.jsx","Components/Register/Register.jsx","Routes/Auth.js","Components/Redux/Reducer/MenuReducer.js","Components/topbar/logo.png","Components/topbar/Topbar.jsx","Components/Sidenavbar/Sidenavbar.jsx","Components/Control_Panel/Controlpanel.jsx","Components/Message/message.jpg","Components/Message/Message.jsx","Components/Table/Table.jsx","Components/Tree/Tree.jsx","Components/Redux/Reducer/PartnersLevelJson.js","Components/Partners/Partners.jsx","Components/Uplines/Table.jsx","Components/Uplines/Uplines.jsx","Components/Lostprofits/Table.jsx","Components/Lostprofits/Lostprofits.jsx","Components/Sidenavbar/Sidenavbarmobile.js","Routes/Console.js","App.js","reportWebVitals.js","Components/Redux/Store.js","index.js"],"names":["contractAddress","utils","tronWeb","contract","setTronWeb","at","ConnectWallet","Connect","className","onClick","width","src","logo","getWindowDimensions","window","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","slice","createSlice","name","initialState","value","reducers","toogleAuth","state","action","payload","actions","getAuth","auth","Hex_to_base58","string","a","address","fromHex","tooglePreviewModeId","getPreviewModeId","previewModeId","toogleuserId","getuserId","userId","Login","id","tronLink","defaultAddress","base58","authStatus","useSelector","dispatch","useDispatch","previewId","setpreviewId","Loader","setLoader","installed","loggedIn","settronWeb","localStorage","getItem","console","log","document","title","checklogin","setInterval","clearInterval","checkUser","PreviewMode","trim","length","toast","error","test","Utils","users","call","LoadUserExist","Promise","resolve","userexist","FetchUserId","userList","JSON","parse","LoadUserAddress","userAddress","isExist","LoadUserId","toNumber","CONNECT_WALLET","ready","location","reload","tronWebState","tries","timer","TRONGRID_API","TronWeb","hex","toHex","on","e","then","checkUser2","HandleSubmit","preventDefault","href","Form","onSubmit","Group","controlId","Control","placeholder","onChange","target","autoComplete","autoCorrect","required","disabled","style","opacity","size","color","marginLeft","marginBottom","Register","FaBullseye","refId","setrefId","pathname","split","currUserID","CurrentIdLoad","CurrentId","Buy","toString","refID","toastId","loading","regUser","send","feeLimit","callValue","shouldPollResponse","res","remove","success","catch","err","paddingInline","to","textDecoration","Auth","component","exact","path","toogleMenu","getTooglemenu","menu","Topbar","opensidebar","opened","userID","walletId","float","position","right","overflow","alt","Sidenavbar","useLocation","VALIDROUTE","toLowerCase","PATHNAME","display","flexDirection","alignItems","class","Controlpanel","partnersList","setpartnersList","coinsCount","setcoinsCount","coinPrice","setcoinPrice","labels","data","setchartData","currentLevel","setcurrentLevel","LoadingLevels","setLoadingLevels","FetchCoinCurrecy","fetch","json","tron","usd","ProccessRefralGraphData","graphData","Temp","joinedData","joined","moment","unix","format","undefined","SortedObject","Object","fromEntries","entries","sort","b","aa","reverse","join","bb","key","push","resData","FetchData","FetchPartners","getcurrentLevel","FetchEarning","FetchLevels","setLevelsData","partners","viewUserReferral","items","item","Array","from","_","i","level","viewUserLevelExpired","checkLevel","currentTimestamp","Date","now","PartnersArray","LevelJSON","LEVEL","count","calculate_CoinsFromLevels","ConverttoHexArray","Totalcoins","LEVEL1","LEVEL2","LEVEL3","LEVEL4","LEVEL5","LEVEL_PRICE","temp","t","LevelsData","buytoast","marginTop","buyLevel","expired","expiredAgo","getTime","active","TempActive","Math","round","duration","end","decimals","justifyContent","Spinner","variant","animation","role","Message","message","rel","Table","coinprice","tableData","settableData","minWidth","map","index","coins","toFixed","TreeLine","styled","button","TreeItem","funcs","toggleOpen","makeParent","onDoubleClick","children","isOpen","TreeList","tree","child","Tree","setTree","newTree","addChild","parent","tooglePartnersLevelJson","Partners","searchId","setsearchId","LoadingStruct","setLoadingStruct","LoadingTable","setLoadingTable","searchPartnerData","setsearchPartnerData","treeData","settreeData","TableData","setTableData","FetchTree","TREEDATA","ProccessTreeData","id_to_num","resId","all","response","TempData","tempArray","PreProcessData","FetchPayments","result","TotalPartnersCount","SearchAboutPartner","readOnly","origin","copy","Uplines","setdata","temp_address","TempArray","referrerID","refererAddressPromise","refererAddress","filter","Lostprofits","expiration0","expiration1","expiration2","expiration3","expiration4","expiration5","expiration6","expiration7","expiration8","Sidenavbarmobile","Offcanvas","show","onHide","Header","closeButton","Title","Body","borderRadius","Console","DISCONNECT_EMIT","App","basename","process","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","MenuReducer","AuthReducer","partnersLevelJson","PartnersLevelJson","UserId","ReactDOM","StrictMode","store","Store","getElementById"],"mappings":"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","file":"static/js/main.6d84d3b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logimg.84960df3.jpg\";","export default __webpack_public_path__ + \"static/media/logm.9c996e3c.jpg\";","const contractAddress = \"TLHbZrdCGXn9KLvb6qvygYWHJZ7ucLyRy8\"\n// \"TLHbZrdCGXn9KLvb6qvygYWHJZ7ucLyRy8\" Version 1 (MAIN NET)\n// \"TVtd6PSWS9qfW9RBYkwinoSAVD56zAzSMK\"; Version = 3 (TEST)\n// \"TP3knTX2vSsPxpffb5Fe8XMgMCuqhXZdms\" Version = 2(TEST)\n// 'TLoV6Qr7tqDnHi641jG2hXZLQYUd4RTTAs' Version = 1(TEST)\n\nconst utils = {\n    tronWeb: false,\n    contract: false,\n    contractAddress:contractAddress,\n\n    async setTronWeb(tronWeb) {\n        this.tronWeb = tronWeb;\n        this.contract = await tronWeb.contract().at(contractAddress)\n    },\n\n};\n\nexport default utils;\n\n","export default __webpack_public_path__ + \"static/media/tronlink.e60d7b91.png\";","import React from \"react\";\nimport logo from '../../Assets/tronlink.png';\n\nconst ConnectWallet = ({Connect}) => {\n  return (\n    <div className=\"Wallet-Div\">\n      <div onClick={()=>Connect()} className=\"Wallet-Circle\">\n        <img\n          width={30}\n          src={logo}\n        />\n      </div>\n      {/* <div className=\"Wallet-Circle\">\n        <img\n          width={28}\n          src=\"https://trustwallet.com/assets/images/media/assets/TWT.png\"\n        />\n      </div>\n      <div className=\"Wallet-Circle\">\n        <img\n          width={28}\n          src=\"https://app.compound.finance/compound-components/assets/icn-coinbase-wallet.svg\"\n        />\n      </div> */}\n      {/* <div onClick={()=>CONNECT_WALLET()} className=\"Wallet-Circle\">\n                    <img\n                      width={25}\n                      src=\"https://storage.opensea.io/static/wallets/walletconnect/walletconnect-alternative.png\"\n                    />\n                  </div> */}\n      {/* <div onClick={()=>CONNECT_WALLET()} className=\"Wallet-Circle\">\n                    <img\n                      width={25}\n                      src=\"https://static.opensea.io/logos/fortmatic-alternative.png\"\n                    />\n                  </div> */}\n    </div>\n  );\n};\n\nexport default ConnectWallet;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'auth',\n  initialState: {\n    value: \"LOGGEDOUT\",\n  },\n  reducers: {\n    toogleAuth: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleAuth } = slice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    // dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getAuth = state => state.auth.value;\n\nexport default slice.reducer;\n","export const Hex_to_base58 = async(string)=> window?.tronWeb?.address?.fromHex(string)","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'previewModeId',\n  initialState: {\n    value: null,\n  },\n  reducers: {\n    tooglePreviewModeId: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { tooglePreviewModeId } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getPreviewModeId = state => state.previewModeId.value;\n\nexport default slice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'userId',\n  initialState: {\n    value: \"\",\n  },\n  reducers: {\n    toogleuserId: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleuserId } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getuserId = state => state.userId.value;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./Login.css\";\r\nimport logimg from \"./logimg.jpg\";\r\nimport logm from \"./logm.jpg\";\r\nimport { GrSend } from \"react-icons/gr\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { BsInstagram } from \"react-icons/bs\";\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport Utils from \"../../Utils/index\";\r\n\r\n// import Logo from \"../../Assets/Logos/Classfresh(logo).png\";\r\nimport { Form, Button, Toast } from \"react-bootstrap\";\r\nimport ConnectWallet from \"../Wallets/ConnectWallet\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toogleAuth, getAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { FaBullseye } from \"react-icons/fa\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { tooglePreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport UserId, { toogleuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nconst TEMP_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\n\r\nconst Login = () => {\r\n  const { height, width } = useWindowDimensions();\r\n  let id =  window?.tronLink?.tronWeb?.defaultAddress?.base58;\r\n\r\n\r\n  const authStatus = useSelector(getAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginId, setloginId] = useState(\"\");\r\n  const [previewId, setpreviewId] = useState(\"\");\r\n  const [Loader, setLoader] = useState(false);\r\n\r\n  const [FOUNDATION_ADDRESS, setFOUNDATION_ADDRESS] = useState(TEMP_ADDRESS);\r\n\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  let TOKEN = localStorage.getItem(\"access_token\");\r\n\r\n  console.log(authStatus);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login|SmartGenie\";\r\n\r\n\r\n    const checklogin = setInterval(async () => {\r\n      if (window?.tronLink?.tronWeb) {\r\n        // alert(window?.tronLink?.tronWeb?.defaultAddress?.base58)\r\n        clearInterval(checklogin);\r\n\r\n        await checkUser(window?.tronLink?.tronWeb?.defaultAddress?.base58);\r\n\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const PreviewMode = async () => {\r\n    try {\r\n\r\n\r\n      if (previewId.trim().length == 0) {\r\n        return toast.error(\"Please enter valid RefId/address\");\r\n      }\r\n\r\n      setLoader(true);\r\n      // if string is address\r\n      if (/[a-zA-Z]/.test(previewId)) {\r\n\r\n        const LoadUserExist = await Utils.contract.users(previewId).call();\r\n\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        setLoader(false);\r\n        if (userexist[0] == false) {\r\n          setLoader(false);\r\n\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n\r\n        dispatch(tooglePreviewModeId(await Hex_to_base58(previewId)));\r\n        await FetchUserId(previewId);\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n\r\n      } else {\r\n\r\n        const LoadUserAddress = await Utils.contract\r\n          .userList(JSON.parse(previewId))\r\n          .call();\r\n\r\n          \r\n        let userAddress = await Promise.resolve(LoadUserAddress);\r\n\r\n        \r\n        // userAddress = (await Utils.tronWeb.address.fromHex(userAddress))\r\n\r\n\r\n        const LoadUserExist = await Utils.contract.users(userAddress).call();\r\n\r\n\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n\r\n        if (userexist.isExist == false) {\r\n          setLoader(false);\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n        dispatch(tooglePreviewModeId(await Hex_to_base58(userAddress)));\r\n        await FetchUserId(await Hex_to_base58(userAddress));\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n\r\n        // setLoader(false);\r\n      }\r\n\r\n      // const userexist = await Promise.resolve(LoadUserExist);\r\n      // console.log(userexist);\r\n      // if (userexist[0] == true) {\r\n      //   dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      // } else {\r\n      //   window.location.href = \"/register\";\r\n      //   dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n      // }\r\n    } catch (e) {\r\n      console.log(e,\"yes\");\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const FetchUserId = async (userAddress) => {\r\n    const LoadUserId = await Utils.contract.users(userAddress).call();\r\n    const userId = await Promise.resolve(LoadUserId);\r\n    // console.log(userId.id.toNumber(),\"HI\");\r\n    dispatch(toogleuserId(userId.id.toNumber()));\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n\r\n  //     if (window.tronLink?.tronWeb) {\r\n  //       dispatch(toogleAuth(\"LOGGEDIN\"));\r\n  //     } else {\r\n  //       dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n  //     }\r\n\r\n  //     if (authStatus == \"LOGGEDOUT\") {\r\n  //       if (window.location.pathname != \"/\") {\r\n  //         window.location.href = \"/\";\r\n  //       }\r\n  //     }\r\n  //   }, 200);\r\n  // }, [tronWeb]);\r\n\r\n  const FetchData = async () => {\r\n    try {\r\n      await FetchPartners(\r\n        id,\r\n        []\r\n      ).then((e) => {\r\n        alert(e.length);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const FetchPartners = async (id, partners) => {\r\n    return await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          partners.push(e);\r\n          await FetchPartners(e, partners);\r\n        }\r\n        return partners;\r\n      });\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      if (!window.tronWeb.ready || window.tronLink.tronWeb == false) {\r\n        window.location.reload();\r\n      }\r\n\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      console.log(window.tronWeb,\"CONNECT\");\r\n\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object as TronLink disabled the\r\n      // function call\r\n      // window.tronWeb.defaultAddress = {\r\n      //   hex: window.tronWeb?.address?.toHex(FOUNDATION_ADDRESS),\r\n      //   base58: FOUNDATION_ADDRESS,\r\n      // };\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(id),\r\n        base58: id,\r\n      };\r\n\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        // alert(\"CHNAGES\");\r\n        if (tronWeb.loggedIn) return;\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        // alert(id)\r\n        await checkUser2();\r\n        // alert(id);\r\n        // dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const checkUser = async (id) => {\r\n    // console.log(window.tronWeb);\r\n    try{\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        const LoadUserExist = await Utils.contract\r\n          .users(id)\r\n          .call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist.isExist == true) {\r\n          await FetchUserId(id);\r\n          dispatch(toogleAuth(\"LOGGEDIN\"));\r\n\r\n        } else {\r\n          // window.location.href = \"/register\";\r\n\r\n          dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n        }\r\n        // console.log(userexist[0]);\r\n      });\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n    \r\n  };\r\n\r\n  const checkUser2 = async () => {\r\n\r\n    // console.log(window.tronWeb);\r\n    await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const LoadUserExist = await Utils.contract\r\n        .users(id)\r\n        .call();\r\n      const userexist = await Promise.resolve(LoadUserExist);\r\n\r\n      if (userexist.isExist == true) {\r\n        await FetchUserId(id);\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      } else {\r\n        window.location.href = \"/register\";\r\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n      }\r\n      // console.log(userexist[0]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-Main\">\r\n      <div className=\"Triangle\"></div>\r\n\r\n      <div className=\"Vertical-Line\" />\r\n\r\n      <div className=\"Cover-Div\">\r\n        <div className=\"Outer-Div\">\r\n          <div className=\"Inner-Div\">\r\n            <div className=\"Double-Div\">\r\n              <div className={\"Form-Box-Inside\"}>\r\n                <div className=\"Logo-Div\">\r\n                  <p>Connect To Wallet</p>\r\n                  {/* <img style={{ width: \"221px\", height: \"67px\" }} src={Logo} /> */}\r\n                </div>\r\n\r\n                <ConnectWallet Connect={CONNECT_WALLET} />\r\n\r\n                <div className=\"Divider\">\r\n                  Or you can enter manually, enter the number of your TRX purse\r\n                </div>\r\n                <div className=\"Inside-Form-Div\">\r\n                  <Form onSubmit={(e) => HandleSubmit(e)}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                      <Form.Control\r\n                        name=\"text\"\r\n                        className=\"Input\"\r\n                        placeholder=\"Enter Address or Referal Id\"\r\n                        value={previewId}\r\n                        onChange={(e) => {\r\n                          setpreviewId(e.target.value);\r\n                        }}\r\n                        autoComplete={\"false\"}\r\n                        autoCorrect={\"false\"}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <div className=\"Button-Div\">\r\n                      <button\r\n                        onClick={PreviewMode}\r\n                        disabled={Loader}\r\n                        style={{ opacity: Loader ? 0.5 : 1 }}\r\n                        className=\"Button\"\r\n                      >\r\n                        {Loader ? (\r\n                          <p>Loading (Please wait)</p>\r\n                        ) : (\r\n                          <p>Enter App (Preview Mode)</p>\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n\r\n              {width >= 630 && (\r\n                <div className={\"Form-Box-Inside\"}>\r\n                  <div className=\"login2\">\r\n                    <center>\r\n                      {/* <img src={logm} height=\"80px\" width=\"90px\" alt=\"login_m\" /> */}\r\n                    </center>\r\n                    <h2 className=\"log2h2\">WELCOME TO SMART GENIE</h2>\r\n                    <center>\r\n                      <p className=\"social\">Follow us on social networks</p>\r\n                    </center>\r\n                    <div className=\"icdiv\">\r\n                      <div className=\"iccircle\">\r\n                        <GrSend size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <FiTwitter color=\"black\" size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <BsInstagram color=\"black\" size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <BsFacebook color=\"black\" size=\"20px\" />\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <p className=\"social\">\r\n                      Any question you can get in our chat:\r\n                    </p>\r\n\r\n                    <button className=\"log2btn\">Chat in Telegram EN</button>\r\n                    <button className=\"log2btn\">Join Discord</button>\r\n\r\n                    <div className=\"Bottom\">\r\n                      <p className=\"log2con\">SMART GENIE smart-contract:</p>\r\n                      <a target=\"_blank\" href={`https://tronscan.org/#/contract/${Utils?.contractAddress}`} style={{color:\"white\"}} className=\"open\">\r\n                        {Utils?.contractAddress}\r\n                        {/* 0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7 */}\r\n                        <BsBoxArrowUpRight\r\n                          style={{ marginLeft: 10, marginBottom: 1 }}\r\n                          size=\"12px\"\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// function Login(){\r\n//     return(\r\n//         <div className=\"Login\">\r\n//             <div className=\"login1\">\r\n//                 <center>\r\n//                     <h1 className=\"logh1\">Login</h1>\r\n//                     <center><h5 className=\"logh5\">Automatic login if you have one of the following wallets:</h5></center>\r\n//                     <img src={logimg} alt=\"logimage\" height=\"80px\" width=\"250px\" />\r\n//                     <center><h5 className=\"logh5\">Or you can enter manually, enter the number of your ETH purse</h5></center>\r\n//                     <input className=\"loginp\" placeholder=\"Enter ETH address or system ID\"/><br/><br/>\r\n//                     <button className=\"logbtn\">Enter manually (preview mode)</button>\r\n\r\n//                 </center>\r\n//             </div>\r\n// <div className=\"login2\">\r\n//     <center>\r\n//         <img src={logm} height=\"80px\" width=\"90px\" alt=\"login_m\" />\r\n//     </center>\r\n//     <h2 className=\"log2h2\">SMART  GENIE</h2>\r\n//     <center><p className=\"social\">Follow us on social networks</p></center>\r\n//     <div className=\"icdiv\">\r\n//     <div className=\"iccircle\">\r\n//         <GrSend/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//     <FiTwitter color=\"black\"/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//         <BsInstagram color=\"black\"/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//         <BsFacebook color=\"black\" size=\"20px\"/>\r\n//     </div>\r\n\r\n//     </div>\r\n//     <br/>\r\n\r\n//     <p className=\"social\">Any question you can get in our chat:</p>\r\n\r\n// <button className=\"log2btn\"><GrSend className=\"send\" size=\"15px\"/>Chat in Telegram EN</button>\r\n\r\n// <p className=\"log2con\">SMART GENIE smart-contract:</p>\r\n\r\n// <div className=\"open\">\r\n//     <div className=\"open1\">\r\n//     <p className=\"log2con1\">\r\n// (Contract Address to be Updated)\r\n// </p>\r\n//     </div>\r\n\r\n//     <div className=\"open2\">\r\n//     <BsBoxArrowUpRight size=\"12px\"/>\r\n//     </div>\r\n// </div>\r\n// </div>\r\n\r\n// </div>\r\n//     )\r\n// }\r\n// export default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./Register.css\";\r\nimport { GrSend } from \"react-icons/gr\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { BsInstagram } from \"react-icons/bs\";\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\r\n\r\n// import Logo from \"../../Assets/Logos/Classfresh(logo).png\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport ConnectWallet from \"../Wallets/ConnectWallet\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { FaBullseye } from \"react-icons/fa\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport Utils from \"../../Utils/index\";\r\nimport { getAuth, toogleAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { toogleuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nconst Register = () => {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const [Register, setRegister] = useState(FaBullseye);\r\n\r\n  const [loginId, setloginId] = useState(\"\");\r\n  const [refId, setrefId] = useState(null);\r\n  const [alertdata, setalertdata] = useState(null);\r\n  const [Loader, setLoader] = useState(false);\r\n\r\n  const FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\n  const authStatus = useSelector(getAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  let TOKEN = localStorage.getItem(\"access_token\");\r\n\r\n  // const Login =()=>{\r\n  //   window.location = \"http://console.localhost:3000/\"\r\n  // }\r\n\r\n  let id = window?.tronLink?.tronWeb?.defaultAddress?.base58;\r\n\r\n  useEffect(() => {\r\n    document.title = \"Smart Genie|Register\";\r\n    if (window.location?.pathname?.split(\"/\")[2]) {\r\n      setrefId(window.location?.pathname?.split(\"/\")[2]);\r\n    }\r\n  }, []);\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      if (!window.tronWeb.ready) {\r\n        window.location.href = \"/\";\r\n      }\r\n\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(id),\r\n        base58: id,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        if (refId != null) {\r\n          if(JSON.parse(refId) <= 9){\r\n            let CurrentIdLoad = await Utils.contract.currUserID().call();\r\n            let CurrentId = await Promise.resolve(CurrentIdLoad);\r\n            await Buy(JSON.parse(CurrentId.toString()));\r\n          }else{\r\n            await Buy(refId);\r\n          }\r\n\r\n        } else {\r\n          let CurrentIdLoad = await Utils.contract.currUserID().call();\r\n          let CurrentId = await Promise.resolve(CurrentIdLoad);\r\n          await Buy(JSON.parse(CurrentId.toString()));\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const Buy = async (refID) => {\r\n    window.tronWeb.defaultAddress = {\r\n      hex: window.tronWeb?.address?.toHex(id),\r\n      base58: id,\r\n    };\r\n\r\n    return await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const toastId = toast.loading(\"Waiting for transaction confirmation\");\r\n      setLoader(true);\r\n      try {\r\n        await Utils.contract\r\n          .regUser(refID)\r\n          .send({\r\n            feeLimit: 100_000_000,\r\n            callValue: 1000000 * 300,\r\n            shouldPollResponse: true,\r\n          })\r\n          .then(async (res) => {\r\n            toast.remove(toastId);\r\n            toast.success(\"Transaction done successfully\");\r\n            await FetchUserId(id);\r\n            dispatch(toogleAuth(\"LOGGEDIN\"));\r\n\r\n            return res;\r\n          })\r\n          .catch(async (err) => {\r\n            await checkUser(toastId);\r\n            console.log(err);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n        await checkUser(toastId);\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkUser = async (toastId) => {\r\n    console.log(window.tronWeb);\r\n    await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const LoadUserExist = await Utils.contract\r\n        .users(id)\r\n        .call();\r\n      const userexist = await Promise.resolve(LoadUserExist);\r\n      if (userexist.isExist == true) {\r\n        toast.remove(toastId);\r\n        toast.success(\"Transaction done successfully\");\r\n        setLoader(false);\r\n        await FetchUserId(id);\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n        window.location.href = \"/\";\r\n      } else {\r\n        // window.location.href = \"/register\";\r\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n\r\n        setLoader(false);\r\n        toast.remove(toastId);\r\n        toast.error(\"Transaction Failed\");\r\n      }\r\n\r\n      // console.log(userexist[0]);\r\n    });\r\n  };\r\n\r\n  const FetchUserId = async (userAddress) => {\r\n    const LoadUserId = await Utils.contract.users(userAddress).call();\r\n    const userId = await Promise.resolve(LoadUserId);\r\n    // alert(userId.id.toNumber(),\"hi\")\r\n    dispatch(toogleuserId(userId.id.toNumber()));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-Main\">\r\n      <Toaster />\r\n\r\n      <div className=\"Triangle\"></div>\r\n\r\n      <div className=\"Vertical-Line\" />\r\n\r\n      <div className=\"Cover-Div\">\r\n        <div className=\"Outer-Div\">\r\n          <div className=\"Inner-Div\">\r\n            <div className=\"Double-Div\">\r\n              <div className={\"Form-Box-Inside\"}>\r\n                <div className=\"Logo-Div\">\r\n                  <p>Registration</p>\r\n                  {/* <img style={{ width: \"221px\", height: \"67px\" }} src={Logo} /> */}\r\n                </div>\r\n\r\n                <ConnectWallet />\r\n\r\n                <div style={{ paddingInline: \"20px\" }} className=\"Divider\">\r\n                  Enter Refereral Id of Upline or leave it empty to get\r\n                  automatically\r\n                </div>\r\n                <div className=\"Inside-Form-Div\">\r\n                  <Form onSubmit={(e) => HandleSubmit(e)}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                      <Form.Control\r\n                        name=\"email\"\r\n                        className=\"Input\"\r\n                        placeholder=\"Enter Referal Id of Upline\"\r\n                        value={refId}\r\n                        onChange={(e) => {\r\n                          setrefId(e.target.value);\r\n                        }}\r\n                        required={false}\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <div className=\"Button-Div\">\r\n                      <button\r\n                        onClick={CONNECT_WALLET}\r\n                        disabled={Loader}\r\n                        style={{ opacity: Loader ? 0.5 : 1 }}\r\n                        className=\"Button\"\r\n                      >\r\n                        {Loader ? (\r\n                          <p>Transction Loading...</p>\r\n                        ) : (\r\n                          <p>Purchase Level 1 to Register</p>\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"Back-Button-Div\">\r\n                      <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\r\n                        <button className=\"Back-Button\">Back</button>\r\n                      </Link>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n\r\n              {width >= 630 && (\r\n                <div className={\"Form-Box-Inside\"}>\r\n                  <div className=\"login2\">\r\n                    <center>\r\n                      {/* <img src={logm} height=\"80px\" width=\"90px\" alt=\"login_m\" /> */}\r\n                    </center>\r\n                    <h2 className=\"log2h2\">WELCOME TO SMART GENIE</h2>\r\n                    <center>\r\n                      <p className=\"social\">Follow us on social networks</p>\r\n                    </center>\r\n                    <div className=\"icdiv\">\r\n                      <div className=\"iccircle\">\r\n                        <GrSend size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <FiTwitter color=\"black\" size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <BsInstagram color=\"black\" size={20} />\r\n                      </div>\r\n                      <div className=\"iccircle\">\r\n                        <BsFacebook color=\"black\" size=\"20px\" />\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <p className=\"social\">\r\n                      Any question you can get in our chat:\r\n                    </p>\r\n\r\n                    <button className=\"log2btn\">Chat in Telegram EN</button>\r\n                    <button className=\"log2btn\">Join Discord</button>\r\n\r\n                    <div className=\"Bottom\">\r\n                      <p className=\"log2con\">SMART GENIE smart-contract:</p>\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href={`https://tronscan.org/#/contract/${Utils?.contractAddress}`}\r\n                        style={{ color: \"white\" }}\r\n                        className=\"open\"\r\n                      >\r\n                        {Utils?.contractAddress}\r\n                        {/* 0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7 */}\r\n                        <BsBoxArrowUpRight\r\n                          style={{ marginLeft: 10, marginBottom: 1 }}\r\n                          size=\"12px\"\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n// function Login(){\r\n//     return(\r\n//         <div className=\"Login\">\r\n//             <div className=\"login1\">\r\n//                 <center>\r\n//                     <h1 className=\"logh1\">Login</h1>\r\n//                     <center><h5 className=\"logh5\">Automatic login if you have one of the following wallets:</h5></center>\r\n//                     <img src={logimg} alt=\"logimage\" height=\"80px\" width=\"250px\" />\r\n//                     <center><h5 className=\"logh5\">Or you can enter manually, enter the number of your ETH purse</h5></center>\r\n//                     <input className=\"loginp\" placeholder=\"Enter ETH address or system ID\"/><br/><br/>\r\n//                     <button className=\"logbtn\">Enter manually (preview mode)</button>\r\n\r\n//                 </center>\r\n//             </div>\r\n// <div className=\"login2\">\r\n//     <center>\r\n//         <img src={logm} height=\"80px\" width=\"90px\" alt=\"login_m\" />\r\n//     </center>\r\n//     <h2 className=\"log2h2\">SMART  GENIE</h2>\r\n//     <center><p className=\"social\">Follow us on social networks</p></center>\r\n//     <div className=\"icdiv\">\r\n//     <div className=\"iccircle\">\r\n//         <GrSend/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//     <FiTwitter color=\"black\"/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//         <BsInstagram color=\"black\"/>\r\n//     </div>\r\n//     <div className=\"iccircle\">\r\n//         <BsFacebook color=\"black\" size=\"20px\"/>\r\n//     </div>\r\n\r\n//     </div>\r\n//     <br/>\r\n\r\n//     <p className=\"social\">Any question you can get in our chat:</p>\r\n\r\n// <button className=\"log2btn\"><GrSend className=\"send\" size=\"15px\"/>Chat in Telegram EN</button>\r\n\r\n// <p className=\"log2con\">SMART GENIE smart-contract:</p>\r\n\r\n// <div className=\"open\">\r\n//     <div className=\"open1\">\r\n//     <p className=\"log2con1\">\r\n// (Contract Address to be Updated)\r\n// </p>\r\n//     </div>\r\n\r\n//     <div className=\"open2\">\r\n//     <BsBoxArrowUpRight size=\"12px\"/>\r\n//     </div>\r\n// </div>\r\n// </div>\r\n\r\n// </div>\r\n//     )\r\n// }\r\n// export default Login;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport \"../App.css\";\nimport Login from \"../Components/Login/Login\";\nimport { getAuth } from \"../Components/Redux/Reducer/AuthReducer\";\nimport Register from \"../Components/Register/Register\";\n\nfunction Auth() {\n  const authStatus = useSelector(getAuth);\n\n\n  useEffect(() => {\n    if (authStatus == \"LOGGEDOUT\") {\n      if(window.location.pathname.split(\"/\")[1] != \"register\"){\n        if (window.location.pathname != \"/\") {\n          window.location.href = \"/\";\n        }\n      }\n  \n    }\n  }, [authStatus]);\n\n  return (\n    <div>\n      <Route component={Login} exact path=\"/\" />\n      <Route component={Register} path=\"/register\" />\n\n    </div>\n  );\n}\n\nexport default Auth;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'menu',\n  initialState: {\n    value: false,\n  },\n  reducers: {\n    toogleMenu: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleMenu } = slice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    // dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getTooglemenu = state => state.menu.value;\n\nexport default slice.reducer;\n","export default __webpack_public_path__ + \"static/media/logo.fba3736c.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./Topbar.css\";\r\nimport logo from \"./logo.png\";\r\nimport { RiProfileLine } from \"react-icons/ri\";\r\nimport { BsFillSuitDiamondFill } from \"react-icons/bs\";\r\nimport britain from \"./britain.png\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toogleMenu, getTooglemenu } from \"../Redux/Reducer/MenuReducer\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { getuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nfunction Topbar(opensidebar, opened) {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const previewId = useSelector(getPreviewModeId);\r\n  const userID = useSelector(getuserId);\r\n\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const menu = useSelector(getTooglemenu);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"topbar\">\r\n      <div className=\"topbarcontainer\">\r\n        {/* <div className=\"leftcontent\">\r\n                        <img src={logo} alt=\"logo\" className=\"logo\"></img>\r\n                </div> */}\r\n\r\n        {width <= 850 && (\r\n          <div className=\"div0\">\r\n            <div onClick={() => dispatch(toogleMenu(!menu))} className=\"menu\">\r\n              <img src=\"https://img.icons8.com/material-outlined/48/000000/menu--v1.png\" />{\" \"}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"div1\">\r\n          <div className=\"contentDiv\">\r\n            <span className=\"address\">Id : {userID}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"div2\">\r\n          <div className=\"contentDiv\">\r\n            <span  style={{ width: \"calc(100% - 25px)\" }} className=\"address\">\r\n              Address: <a target=\"_blank\" href={`https://tronscan.org/#/address/${walletId}`} >{walletId}</a>\r\n            </span>\r\n            <span style={{ float: \"right\", position: \"absolute\", right: 10 }}>\r\n              <div\r\n                style={{ overflow: \"hidden\", width: 30, height: 30 }}\r\n                className=\"LanguageDiv\"\r\n              >\r\n                <img\r\n                  alt=\"\"\r\n                  width=\"25\"\r\n                  height=\"25\"\r\n                  src=\"https://avatars.githubusercontent.com/u/64833303?s=96&v=4\"\r\n                />\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"div3\">\r\n          {/* <div className=\"LanguageDiv\">\r\n            <img\r\n              className=\"image\"\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n              src={britain}\r\n              alt=\"aa\"\r\n              width=\"40px\"\r\n            />\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Topbar;\r\n","import React from \"react\";\r\nimport \"./Sidenavbar.css\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport { AiFillMessage } from \"react-icons/ai\";\r\nimport { FaNetworkWired } from \"react-icons/fa\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nimport { FaSearchDollar } from \"react-icons/fa\";\r\nimport { IoIosSend } from \"react-icons/io\";\r\nimport { BsBoxArrowRight } from \"react-icons/bs\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { toogleAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction Sidenavbar() {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const PATHNAME = () => location?.pathname?.toLowerCase();\r\n\r\n  const VALIDROUTE = (path) => (PATHNAME(path) == path ? true : false);\r\n\r\n  const Logout = () => {\r\n    window.tronLink.tronWeb = false;\r\n    dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidenav\">\r\n      <div className=\"sidebarcontainer\">\r\n        <div className=\"menu\">\r\n          <div className=\"logodiv\">Smart Genie</div>\r\n          <div className=\"hlinediv\">\r\n            <div className=\"hline\"></div>\r\n          </div>\r\n          <ul className=\"sidebarlist\">\r\n            <Link\r\n              className={VALIDROUTE(\"/\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/\") ? (\r\n                    <img\r\n                      src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c56c4a24ed7964135f087b1_Account%20dark.svg\"\r\n                      width=\"24\"\r\n                      alt=\"\"\r\n                      class=\"sidemenu_button_icon\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c3f8723a6538c3f77d63a3c_Account.png\"\r\n                      width=\"24\"\r\n                      alt=\"\"\r\n                      class=\"sidemenu_button_icon\"\r\n                    />\r\n                  )}\r\n                </span>\r\n                Control Panel\r\n              </li>\r\n            </Link>\r\n\r\n            <Link\r\n              className={VALIDROUTE(\"/partners\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Partners\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/partners\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/partners\") ? (\r\n                    <img src=\"https://img.icons8.com/small/24/000000/tree-structure.png\" />\r\n                  ) : (\r\n                    <img src=\"https://img.icons8.com/small/24/ffffff/tree-structure.png\" />\r\n                  )}\r\n                </span>\r\n                Partners\r\n              </li>\r\n            </Link>\r\n            <Link\r\n              className={VALIDROUTE(\"/uplines\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Uplines\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/uplines\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/uplines\") ? (\r\n                    <img src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/24/000000/external-users-cv-resume-flatart-icons-outline-flatarticons.png\" />\r\n                  ) : (\r\n                    <img src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/24/ffffff/external-users-cv-resume-flatart-icons-outline-flatarticons.png\" />\r\n                  )}\r\n                </span>\r\n                Uplines\r\n              </li>\r\n            </Link>\r\n            {/* <Link\r\n              className={VALIDROUTE(\"/lostprofits\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Lostprofits\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/lostprofits\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/lostprofits\") ? (\r\n                    <img src=\"https://img.icons8.com/fluency-systems-filled/24/000000/search-dollar.png\" />\r\n                  ) : (\r\n                    <img src=\"https://img.icons8.com/fluency-systems-filled/24/ffffff/search-dollar.png\" />\r\n                  )}\r\n                </span>\r\n                Lost profits\r\n              </li>\r\n            </Link> */}\r\n            {/* <li\r\n              style={{ color: VALIDROUTE(\"/promo\") ? \"white\" : null }}\r\n              className=\"sidebaritems\"\r\n            >\r\n              <span className=\"icon\">\r\n                <IoIosSend size={24} />\r\n              </span>\r\n              promo\r\n            </li> */}\r\n\r\n            <Link\r\n              onClick={Logout}\r\n              className={\"Link\"}\r\n              to=\"/\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li className=\"sidebaritems\">\r\n                <span className=\"icon\">\r\n                  <BsBoxArrowRight size={24} />\r\n                </span>\r\n                Logout\r\n              </li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Sidenavbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Controlpanel.css\";\r\nimport Chart from \"./Chart\";\r\nimport Slidecontent from \"./Slidecontent\";\r\nimport Chart2 from \"./chart2\";\r\nimport { AiFillBell, AiFillFileExclamation } from \"react-icons/ai\";\r\nimport ScrollToTop from \"../../Tools/ScrollToTop\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport Utils from \"../../Utils/index\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport TronWeb from \"tronweb\";\r\nimport CountUp from \"react-countup\";\r\nimport moment from \"moment\";\r\nimport \"./Levels.css\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst TEMP_ADDRESS = \"TJrQX9SeYDPKVy9eKEViWGqDL2wFGUBaNJ\";\r\n\r\nfunction Controlpanel() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let id = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [partnersList, setpartnersList] = useState(0);\r\n  const [coinsCount, setcoinsCount] = useState(0);\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n  const [chartData, setchartData] = useState({ labels: [], data: [] });\r\n  const [currentLevel, setcurrentLevel] = useState(0);\r\n  const [FOUNDATION_ADDRESS, setFOUNDATION_ADDRESS] = useState(TEMP_ADDRESS);\r\n  const [LoadingLevels, setLoadingLevels] = useState(true);\r\n\r\n  let Total = 0;\r\n\r\n  let partners = [];\r\n\r\n  console.log(previewId);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setcoinPrice(data.tron.usd);\r\n      });\r\n  };\r\n\r\n  const ProccessRefralGraphData = async (data) => {\r\n    let labels = [];\r\n    let graphData = [];\r\n    let Temp = {};\r\n    for await (const address of data) {\r\n      const joinedData = await Utils.contract.users(address).call();\r\n\r\n      let joined = await Promise.resolve(joinedData.joined.toNumber());\r\n      joined = moment.unix(joined).format(\"DD/MM/YYYY\");\r\n      if (Temp[`${joined}`] != undefined) {\r\n        Temp[`${joined}`] = Temp[`${joined}`] + 1;\r\n      } else {\r\n        Temp[`${joined}`] = 1;\r\n      }\r\n    }\r\n\r\n    let SortedObject = Object.fromEntries(\r\n      Object.entries(Temp).sort(function (a, b) {\r\n        var aa = a[0].split(\"/\").reverse().join(),\r\n          bb = b[0].split(\"/\").reverse().join();\r\n        return aa < bb ? -1 : aa > bb ? 1 : 0;\r\n      })\r\n    );\r\n\r\n    for await (const [key, value] of Object.entries(SortedObject)) {\r\n      labels.push(key);\r\n      graphData.push(value);\r\n    }\r\n\r\n    let resData = {\r\n      labels: labels,\r\n      data: graphData,\r\n    };\r\n\r\n    // console.log(labels, graphData);\r\n\r\n    return resData;\r\n  };\r\n\r\n  const FetchData = async () => {\r\n    try {\r\n      return await FetchPartners(id, []).then(async (e) => {\r\n        setpartnersList(e);\r\n        return await getcurrentLevel(id).then(async () => {\r\n          return await FetchEarning(id, e.length).then(async () => {\r\n            await ProccessRefralGraphData(e).then(async (res) => {\r\n              setchartData(res);\r\n              await FetchLevels(id).then((data) => {\r\n                setLevelsData(data);\r\n                setLoadingLevels(false);\r\n              });\r\n              // console.log(res);\r\n            });\r\n          });\r\n        });\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const FetchPartners = async (id, partners) => {\r\n    // console.log(id);\r\n    return await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          partners.push(e);\r\n          await FetchPartners(e, partners);\r\n        }\r\n        return partners;\r\n      });\r\n  };\r\n\r\n  const getcurrentLevel = async (address) => {\r\n    let currentLevel = 0;\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n\r\n      if (\r\n        currentTimestamp.toNumber() * 1000 > Date.now() &&\r\n        currentTimestamp.toNumber() * 1000 != 0\r\n      ) {\r\n        ++currentLevel;\r\n      }\r\n    }\r\n    setcurrentLevel(currentLevel);\r\n    return currentLevel;\r\n  };\r\n\r\n  // const FetchEarning = async (id, partners, coins) => {\r\n  //   return await Utils.contract\r\n  //     .viewUserReferral(id)\r\n  //     .call()\r\n  //     .then(async (items) => {\r\n  //       ++LEVEL;\r\n\r\n  //       if (LEVEL == MAX_LEVEL) {\r\n  //         setcoinsCount(coins);\r\n  //         setpartnersList(partners);\r\n  //         // console.log(coins, partners);\r\n  //         return coins;\r\n  //       }\r\n\r\n  //       let tempCoin = coins;\r\n  // for await (const item of items) {\r\n  //   let e = await Hex_to_base58(item);\r\n  //   if (e == undefined || !e) return;\r\n  //         if (LEVEL == 1) {\r\n  //           for await (const level of Array.from(\r\n  //             { length: 10 },\r\n  //             (_, i) => i + 1\r\n  //           )) {\r\n  //             if (level == 1 || level == 6) {\r\n  //               let expiration = (\r\n  //                 await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  //               ).toNumber();\r\n\r\n  //               if (expiration != 0) {\r\n  //                 tempCoin +=\r\n  //                   (\r\n  //                     await Utils.contract.LEVEL_PRICE(level).call()\r\n  //                   ).toNumber() / 1000000;\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         } else if (LEVEL == 2) {\r\n  //           for await (const level of Array.from(\r\n  //             { length: 10 },\r\n  //             (_, i) => i + 1\r\n  //           )) {\r\n  //             if (level == 2 || level == 7) {\r\n  //               let expiration = (\r\n  //                 await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  //               ).toNumber();\r\n\r\n  //               if (expiration != 0) {\r\n  //                 tempCoin +=\r\n  //                   (\r\n  //                     await Utils.contract.LEVEL_PRICE(level).call()\r\n  //                   ).toNumber() / 1000000;\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         } else if (LEVEL == 3) {\r\n  //           for await (const level of Array.from(\r\n  //             { length: 10 },\r\n  //             (_, i) => i + 1\r\n  //           )) {\r\n  //             if (level == 3 || level == 8) {\r\n  //               let expiration = (\r\n  //                 await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  //               ).toNumber();\r\n\r\n  //               if (expiration != 0) {\r\n  //                 tempCoin +=\r\n  //                   (\r\n  //                     await Utils.contract.LEVEL_PRICE(level).call()\r\n  //                   ).toNumber() / 1000000;\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         } else if (LEVEL == 4) {\r\n  // for await (const level of Array.from(\r\n  //   { length: 10 },\r\n  //   (_, i) => i + 1\r\n  // )) {\r\n  //   if (level == 4 || level == 9) {\r\n  //     let expiration = (\r\n  //       await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  //     ).toNumber();\r\n\r\n  //     if (expiration != 0) {\r\n  //       tempCoin +=\r\n  //         (\r\n  //           await Utils.contract.LEVEL_PRICE(level).call()\r\n  //         ).toNumber() / 1000000;\r\n  //     }\r\n  //   }\r\n  // }\r\n  //         } else if (LEVEL == 5) {\r\n  //           for await (const level of Array.from(\r\n  //             { length: 10 },\r\n  //             (_, i) => i + 1\r\n  //           )) {\r\n  //             if (level == 5 || level == 10) {\r\n  // let expiration = (\r\n  //   await Utils.contract.viewUserLevelExpired(e, level).call()\r\n  // ).toNumber();\r\n\r\n  // if (expiration != 0) {\r\n  //   tempCoin +=\r\n  //     (\r\n  //       await Utils.contract.LEVEL_PRICE(level).call()\r\n  //     ).toNumber() / 1000000;\r\n  // }\r\n  //             }\r\n  //           }\r\n  //         }\r\n\r\n  //         ++countLoading;\r\n  //         setpartnersList(\r\n  //           Array.from({ length: countLoading }, (_, i) => i + 1)\r\n  //         );\r\n  //         setcoinsCount(tempCoin);\r\n\r\n  //         partners.push(e);\r\n  //         await FetchEarning(e, partners, coins + tempCoin);\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  let PartnersArray = [];\r\n  let LevelJSON = {};\r\n\r\n  let MAX_LEVEL = 5;\r\n  var LEVEL = 0;\r\n\r\n  let countLoading = 0;\r\n\r\n  const FetchEarning = async (id, count) => {\r\n    ++LEVEL;\r\n\r\n    if (count == PartnersArray.length) {\r\n      // console.log(count, PartnersArray.length);\r\n      // console.log(LevelJSON);\r\n      // console.log(LEVEL);\r\n      return await calculate_CoinsFromLevels(LevelJSON).then((res) => {\r\n        setcoinsCount(res);\r\n      });\r\n      // return;\r\n    } else {\r\n      await Utils.contract\r\n        .viewUserReferral(id)\r\n        .call()\r\n        .then(async (items) => {\r\n          PartnersArray = [...PartnersArray, ...items];\r\n\r\n          if (LEVEL == 1) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 2) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 3) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 4) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 5) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          }\r\n\r\n          if (items.length > 0) {\r\n            for await (const item of items) {\r\n              let e = await Hex_to_base58(item);\r\n              if (e == undefined || !e) return;\r\n\r\n              await FetchEarning(e, count);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const calculate_CoinsFromLevels = async (data) => {\r\n    let Totalcoins = 0;\r\n\r\n    let LEVEL1 = data[\"1\"];\r\n    let LEVEL2 = data[\"2\"];\r\n    let LEVEL3 = data[\"3\"];\r\n    let LEVEL4 = data[\"4\"];\r\n    let LEVEL5 = data[\"5\"];\r\n\r\n    if (LEVEL1 != undefined) {\r\n      for await (const id of LEVEL1) {\r\n        // LEVEL 1\r\n\r\n        let expiration0 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 1).call()\r\n        ).toNumber();\r\n\r\n        if (expiration0 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(1).call()).toNumber() / 1000000;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration01 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 6).call()\r\n        ).toNumber();\r\n\r\n        if (expiration01 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(6).call()).toNumber() / 1000000;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (LEVEL2 != undefined) {\r\n      for await (const id of LEVEL2) {\r\n        let expiration1 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 2).call()\r\n        ).toNumber();\r\n\r\n        if (expiration1 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(2).call()).toNumber() / 1000000;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration2 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 7).call()\r\n        ).toNumber();\r\n\r\n        if (expiration2 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(7).call()).toNumber() / 1000000;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (LEVEL3 != undefined) {\r\n      for await (const id of LEVEL3) {\r\n        // LEVEL 2\r\n\r\n        let expiration3 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 3).call()\r\n        ).toNumber();\r\n\r\n        if (expiration3 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(3).call()).toNumber() / 1000000;\r\n        }\r\n\r\n        // LEVEL 7\r\n        let expiration4 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 8).call()\r\n        ).toNumber();\r\n\r\n        if (expiration4 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(8).call()).toNumber() / 1000000;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (LEVEL4 != undefined) {\r\n      for await (const id of LEVEL4) {\r\n        // LEVEL 3\r\n\r\n        let expiration5 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 4).call()\r\n        ).toNumber();\r\n\r\n        if (expiration5 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(4).call()).toNumber() / 1000000;\r\n        }\r\n\r\n        // LEVEL 8\r\n\r\n        let expiration6 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 9).call()\r\n        ).toNumber();\r\n\r\n        if (expiration6 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(9).call()).toNumber() / 1000000;\r\n        }\r\n      }\r\n\r\n      if (LEVEL5 != undefined) {\r\n        for await (const id of LEVEL5) {\r\n          // LEVEL 5\r\n          let expiration9 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 5).call()\r\n          ).toNumber();\r\n\r\n          if (expiration9 != 0) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(5).call()).toNumber() / 1000000;\r\n          }\r\n\r\n          // LEVEL 10\r\n          let expiration10 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 10).call()\r\n          ).toNumber();\r\n\r\n          if (expiration10 != 0) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(10).call()).toNumber() /\r\n              1000000;\r\n          }\r\n        }\r\n      }\r\n\r\n      // setcoinsCount(Totalcoins);\r\n    }\r\n    return Totalcoins;\r\n  };\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(id),\r\n        base58: id,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        try {\r\n          await FetchData();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      CONNECT_WALLET();\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const [LevelsData, setLevelsData] = useState({});\r\n\r\n  const Buy = async (value, level) => {\r\n    const buytoast = toast.loading(\r\n      \"Waiting for Transaction Confirmation!! Data will get updated automatically\",\r\n      { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n    );\r\n    return await Utils.contract\r\n      .buyLevel(level)\r\n      .send({\r\n        feeLimit: 100_000_000,\r\n        callValue: 1000000 * value,\r\n        shouldPollResponse: true,\r\n      })\r\n      .then(async (res) => {\r\n        console.log(res);\r\n        await FetchData();\r\n        toast.success(\r\n          `Transaction confirmed successfully!! Level ${level} bought successfully`,\r\n          { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n        );\r\n        toast.remove(buytoast);\r\n      })\r\n      .catch(async (err) => {\r\n        if (err.error != \"Cannot find result in solidity node\") {\r\n          toast.remove(buytoast);\r\n\r\n          toast.error(`Transaction Failed!! Level ${level} purchase failed`, {\r\n            position: \"bottom-center\",\r\n            style: { marginTop: \"80px\" },\r\n          });\r\n        }\r\n\r\n        // Cannot find result in solidity node\r\n        console.log(err);\r\n        await FetchData();\r\n        console.log(err);\r\n        toast.remove(buytoast);\r\n\r\n        if (err.error == \"Cannot find result in solidity node\") {\r\n          toast.success(\r\n            `Transaction confirmed successfully!! Level ${level} bought successfully`,\r\n            { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  const FetchLevels = async (address) => {\r\n    let Temp = {};\r\n\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      Temp[`${level}`] = null;\r\n\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      console.log(currentTimestamp.toNumber() * 1000, Date.now());\r\n      if (\r\n        Date.now() > currentTimestamp.toNumber() * 1000 &&\r\n        currentTimestamp.toNumber() * 1000 != 0\r\n      ) {\r\n        Temp[`${level}`] = {\r\n          expired: true,\r\n          expiredAgo:\r\n            (new Date(currentTimestamp.toNumber() * 1000).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: false,\r\n          disabled: level == 1 ? false : true,\r\n        };\r\n      } else if (\r\n        currentTimestamp.toNumber() * 1000 > Date.now() &&\r\n        currentTimestamp.toNumber() * 1000 != 0\r\n      ) {\r\n        Temp[`${level}`] = {\r\n          expired: false,\r\n          expiredAgo:\r\n            (new Date(currentTimestamp.toNumber() * 1000).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: true,\r\n          disabled: false,\r\n        };\r\n      } else {\r\n        Temp[`${level}`] = {\r\n          expired: false,\r\n          expiredAgo:\r\n            (new Date(currentTimestamp.toNumber() * 1000).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: false,\r\n          disabled: true,\r\n        };\r\n      }\r\n    }\r\n\r\n    let TempActive = 0;\r\n    for await (const i of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      Temp[`${i}`].expiredAgo = Math.round(Temp[`${i}`].expiredAgo, 0);\r\n      if (Temp[`${i}`].active == true) {\r\n        TempActive = i + 1;\r\n        if (Temp[`${TempActive}`] != undefined) {\r\n          Temp[`${TempActive}`][\"disabled\"] = false;\r\n        }\r\n      }\r\n    }\r\n    Temp[`${1}`][\"disabled\"] = false;\r\n\r\n    //if User in preview mode\r\n    if (previewId != null) {\r\n      for await (const i of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n        Temp[`${i}`][\"disabled\"] = true;\r\n      }\r\n    }\r\n\r\n    console.log(Temp);\r\n\r\n    return Temp;\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"con\">\r\n        <Toaster />\r\n\r\n        <h1 className=\"header\">Office</h1>\r\n        <div className=\"control\">\r\n          <div className=\"CoverDiv\">\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c40eb3142d68e3c2b7f8850_ring%20green.png\"\r\n                  width=\"43\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    <CountUp\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={coinsCount}\r\n                    />{\" \"}\r\n                    TRX\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Earned TRX</div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c43381379dc692ebfb3a76c_ring%20purple.png\"\r\n                  width=\"43\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    {\"$ \"}\r\n                    <CountUp\r\n                      decimals={6}\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={coinPrice * coinsCount}\r\n                    />\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Earned Dollar</div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c433812ff0f50fa752c8bb5_ring%20blue.png\"\r\n                  width=\"43\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    {\" \"}\r\n                    <CountUp\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={partnersList?.length}\r\n                    />\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Total Partners</div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c40eb3142d68e3c2b7f8850_ring%20green.png\"\r\n                  width=\"43\"\r\n                  id=\"LevelImage\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    <CountUp\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={currentLevel}\r\n                    />\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Current Level</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"ChartDiv\">\r\n          <Chart data={chartData} />\r\n        </div> */}\r\n\r\n        {/* <Slidecontent /> */}\r\n\r\n        {/* <div className=\"charts\">\r\n          <div className=\"graph1\">\r\n            <Chart />\r\n          </div>\r\n          <br />\r\n          <div className=\"graph1\">\r\n            <Chart2 />\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n      <br />\r\n\r\n      <div\r\n        style={{\r\n          justifyContent: LoadingLevels ? \"center\" : null,\r\n          alignItems: LoadingLevels ? \"center\" : null,\r\n          height: LoadingLevels ? \"18vw\" : null,\r\n        }}\r\n        className=\"level\"\r\n      >\r\n        {!LoadingLevels ? (\r\n          <div className=\"row1\">\r\n            <div className={LevelsData[\"1\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 1</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"1\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"1\"]?.expiredAgo} days left`\r\n                    : \"Expired\" + ` - ${LevelsData[\"1\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">300 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"1\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"1\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(300, 1)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"1\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"1\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n            <div className={LevelsData[\"2\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 2</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"2\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"2\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"2\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"2\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">600 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"2\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"2\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(600, 2)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"2\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"2\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n            <div className={LevelsData[\"3\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 3</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"3\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"3\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"3\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"3\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">1250 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"3\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"3\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(1250, 3)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"3\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"3\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n            <div className={LevelsData[\"4\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 4</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"4\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"4\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"4\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"4\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">2500 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"4\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"4\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(2500, 4)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"4\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"4\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n\r\n            <div className={LevelsData[\"5\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 5</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"5\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"5\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"5\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"5\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">5000 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"5\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"5\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(5000, 5)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"5\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"5\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n\r\n            <div className={LevelsData[\"6\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 6</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"6\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"6\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"6\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"6\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">10000 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"6\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"6\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(10000, 6)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"6\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"6\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n            <div className={LevelsData[\"7\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 7</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"7\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"7\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"7\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"7\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">25000 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"7\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"7\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(25000, 7)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"7\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"7\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n            <div className={LevelsData[\"8\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 8</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"8\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"8\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"8\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"8\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">50000 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"8\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"8\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(50000, 8)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"8\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"8\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n            <div className={LevelsData[\"9\"]?.expired ? \"card-expired\" : \"card\"}>\r\n              <center>\r\n                <div className=\"lvl\">Level 9</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"9\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"9\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"9\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"9\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">100000 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"9\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"9\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(100000, 9)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"9\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"9\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n            <div\r\n              className={LevelsData[\"10\"]?.expired ? \"card-expired\" : \"card\"}\r\n            >\r\n              <center>\r\n                <div className=\"lvl\">Level 10</div>\r\n\r\n                <div className=\"days\">\r\n                  {LevelsData[\"10\"]?.active\r\n                    ? \"Active\" + ` - ${LevelsData[\"10\"]?.expiredAgo} days left`\r\n                    : LevelsData[\"10\"]?.expired == false\r\n                    ? \"Inactive\"\r\n                    : \"Expired\" + ` - ${LevelsData[\"10\"]?.expiredAgo} days ago`}\r\n                </div>\r\n\r\n                <hr className=\"line\" />\r\n\r\n                <div class=\"levelval\">200000 TRX</div>\r\n\r\n                <button\r\n                  disabled={LevelsData[\"10\"]?.disabled}\r\n                  style={{ opacity: LevelsData[\"10\"]?.disabled ? 0.5 : 1 }}\r\n                  onClick={() => Buy(200000, 10)}\r\n                  className=\"btn\"\r\n                >\r\n                  <p>\r\n                    {LevelsData[\"10\"]?.active\r\n                      ? \"Extend\"\r\n                      : LevelsData[\"10\"]?.expired\r\n                      ? \"Restore\"\r\n                      : \"Buy\"}\r\n                  </p>\r\n                </button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Spinner\r\n            variant=\"primary\"\r\n            size=\"100px\"\r\n            animation=\"border\"\r\n            role=\"status\"\r\n          >\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Controlpanel;","export default __webpack_public_path__ + \"static/media/message.bc71e445.jpg\";","import React from 'react'\r\nimport \"./Message.css\"\r\nimport { AiFillBell } from 'react-icons/ai'\r\nimport message from './message.jpg';\r\nfunction Message(){\r\n    return(\r\n        <div className=\"Msg\">\r\n            <div className=\"msg-head\">\r\n                <div className=\"mh1\">\r\n                    <br/>\r\n                    DARK MODE\r\n                </div>\r\n                <div className=\"mh2\">\r\n                    <br/>\r\n                    <span className=\"mnoti\">NOTIFICATION TELEGRAM</span>\r\n                    < AiFillBell/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p className=\"mheading\">No authorization</p>\r\n            </div>\r\n            <div className=\"msgbox\">\r\n                <div className=\"boxhead\">\r\n                    <center><p className=\"headstyle\">In order to read your messages and be able to communicate with your partners and uplines, you must log in to your account through the “Auto Login” function.</p>\r\n                </center>\r\n                </div>\r\n                <div className=\"boxcontent\">\r\n                    <center><img src={message} className=\"msgimage\" alt=\"message\"></img>\r\n                    <p className=\"headstyle\">If you still have questions, you can ask other members in our <a target=\"_blank\"rel=\"noreferrer\" href=\"https://t.me/millionmoneychat\">Telegram Chat</a>.</p>\r\n                    </center>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, { useEffect, useState } from \"react\";\n\nconst Table = ({ data ,coinprice}) => {\n  const [tableData, settableData] = useState(data);\n  const [coinPrice, setcoinPrice] = useState(coinprice);\n\n  useEffect(() => {\n    settableData(data);\n    setcoinPrice(coinprice)\n    console.log(coinPrice);\n  }, [data,coinPrice]);\n\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <p className=\"linkname1\">Received</p>\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}} >SNo</th>\n              <th style={{minWidth:\"380px\"}}>From whom</th>\n              <th style={{minWidth:\"50px\"}}>ID</th>\n              <th style={{minWidth:\"220px\"}}>The amount of TRX</th>\n              <th style={{minWidth:\"80px\"}}>USD</th>\n            </tr>\n            {tableData.map((item, index) => (\n              <tr key={index} >\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">\n                  <a target=\"_blank\" href={`https://tronscan.org/#/address/${item.address}`}>{item.address}</a>\n                </td>\n                <td className=\"tbval\">{item.id}</td>\n                <td className=\"tbval\">{item.coins}</td>\n                <td className=\"tbval\">{item.coins*coinPrice.toFixed(4)}</td>\n              </tr>\n            ))}\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport \"./Tree.css\";\nconst baseTree = [\n  {\n    name: \"item1\",\n  },\n  {\n    name: \"item2\",\n    isOpen: true,\n    children: [\n      {\n        name: \"2-item1\",\n        isOpen: true,\n      },\n    ],\n  },\n  {\n    name: \"item3\",\n    isOpen: true,\n    children: [\n      {\n        name: \"3-item1\",\n      },\n      {\n        name: \"3-item2\",\n        isOpen: false,\n        children: [{ name: \"3.2-item 1\" }],\n      },\n    ],\n  },\n  {\n    name: \"item4\",\n    isOpen: true,\n    children: [\n      {\n        name: \"4-item1\",\n      },\n      {\n        name: \"4-item2\",\n        isOpen: true,\n        children: [{ name: \"4.2-item 1\" }],\n      },\n    ],\n  },\n];\n\nconst TreeLine = styled.button`\n  font-family: Menlo, Consolas, monospace;\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  text-transform: uppercase;\n`;\n\nfunction AddItem({ parent, funcs }) {\n  return (\n    <li>\n      <TreeLine onClick={() => funcs.addChild(parent)}>+</TreeLine>\n    </li>\n  );\n}\n\nfunction TreeItem({ item, funcs }) {\n  const { toggleOpen, makeParent } = funcs;\n  return (\n    <li>\n      <TreeLine\n      key={item.name}\n        onClick={() => toggleOpen(item)}\n        onDoubleClick={() => makeParent(item)}\n      >\n        {item.children && <span>{item.isOpen ? \"-\" : \"+\"}</span>}\n        {item.name}\n      </TreeLine>\n      {item.children && item.isOpen && (\n        <TreeList item={item} tree={item.children} funcs={funcs} />\n      )}\n    </li>\n  );\n}\n\nfunction TreeList({ item, tree, funcs }) {\n  console.log(tree);\n  return (\n    <ul>\n      {tree.map((child,i) => (\n        <TreeItem key={i} item={child} funcs={funcs} />\n      ))}\n      {/* <AddItem parent={item} funcs={funcs} /> */}\n    </ul>\n  );\n}\n\nfunction Tree({data}) {\n  const [tree, setTree] = useState(data);\n\n  useEffect(()=>{\n    setTree(data)\n  },[data])\n\n  console.log(data);\n\n  const toggleOpen = (item) => {\n    const newTree = [...tree];\n    item.isOpen = !item.isOpen;\n    setTree(newTree);\n  };\n  const makeParent = (item) => {\n    const newTree = [...tree];\n    item.children = [];\n    setTree(newTree);\n  };\n  const addChild = (parent) => {\n    const newTree = [...tree];\n    if (!parent) {\n      newTree.push({ name: \"New Item\" });\n    } else {\n      parent.children.push({ name: \"New Item\" });\n    }\n    setTree(newTree);\n  };\n\n  const funcs = {\n    toggleOpen,\n    addChild,\n    makeParent,\n  };\n  return (\n    <div className=\"Tree\">\n      <TreeList tree={tree} funcs={funcs} />\n    </div>\n  );\n}\n\nexport default Tree;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'partnersLevelJson',\n  initialState: {\n    value: {},\n  },\n  reducers: {\n    tooglePartnersLevelJson: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { tooglePartnersLevelJson } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getPartnersLevelJson = state => state.partnersLevelJson.value;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Partners.css\";\r\nimport { AiFillBell } from \"react-icons/ai\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Table from \"../Table/Table\";\r\nimport Tree from \"../Tree/Tree\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { getPartnersLevelJson } from \"../Redux/Reducer/PartnersLevelJson\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { getuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Partners() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n  const [searchId, setsearchId] = useState(\"\");\r\n\r\n  const [LoadingStruct, setLoadingStruct] = useState(true);\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n\r\n  const [searchPartnerData, setsearchPartnerData] = useState({});\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [treeData, settreeData] = useState([]);\r\n  const [TableData, setTableData] = useState([]);\r\n  const userID = useSelector(getuserId);\r\n\r\n  // const levelJson = useSelector(getPartnersLevelJson);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setcoinPrice(data.tron.usd);\r\n      });\r\n  };\r\n\r\n\r\n  const FetchTree = async (id, TREEDATA) => {\r\n    await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n\r\n        var item = {};\r\n\r\n        if (items.length > 0) {\r\n          var temp = [];\r\n          for await (const item of items) {\r\n            let e = await Hex_to_base58(item);\r\n            temp.push(e);\r\n          }\r\n\r\n          item = {\r\n            name: id,\r\n            children: temp,\r\n          };\r\n          TREEDATA[`${id}`] = temp;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          await FetchTree(e, TREEDATA);\r\n        }\r\n      });\r\n\r\n    return TREEDATA;\r\n  };\r\n\r\n  const ProccessTreeData = async (data, id, temp) => {\r\n    const id_to_num = await Utils.contract.users(id).call();\r\n    const resId = await Promise.resolve(id_to_num.id.toNumber());\r\n\r\n    temp = {\r\n      name: resId,\r\n    };\r\n    if (id in data) {\r\n      const fetch = data[id].map(async (i) => {\r\n        return ProccessTreeData(data, i, temp);\r\n      });\r\n      const response = await Promise.all(fetch);\r\n      temp[\"children\"] = response;\r\n    } else {\r\n      temp[\"name\"] = resId;\r\n    }\r\n\r\n\r\n    return temp;\r\n    // if(data[0]?.children){\r\n    //   ProccessTreeData(data[0]?.children)\r\n    // }\r\n    // return ans\r\n  };\r\n\r\n  let PartnersArray = [];\r\n  let LevelJSON = {};\r\n\r\n  var LEVEL = 0;\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const calculate_CoinsFromLevels = async (data) => {\r\n    let TempData = [];\r\n\r\n    let LEVEL1 = data[\"1\"];\r\n    let LEVEL2 = data[\"2\"];\r\n    let LEVEL3 = data[\"3\"];\r\n    let LEVEL4 = data[\"4\"];\r\n    let LEVEL5 = data[\"5\"];\r\n\r\n    if (LEVEL1 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL1) {\r\n        // LEVEL 1\r\n        // temp[\"address\"] = id;\r\n\r\n        let expiration0 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 1).call()\r\n        ).toNumber();\r\n\r\n        if (expiration0 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(1).call()).toNumber() / 1000000;\r\n\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration01 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 6).call()\r\n        ).toNumber();\r\n\r\n        if (expiration01 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(6).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL2 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL2) {\r\n        let expiration1 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 2).call()\r\n        ).toNumber();\r\n\r\n        if (expiration1 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(2).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration2 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 7).call()\r\n        ).toNumber();\r\n\r\n        if (expiration2 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(7).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL3 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL3) {\r\n        // LEVEL 2\r\n\r\n        let expiration3 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 3).call()\r\n        ).toNumber();\r\n\r\n        if (expiration3 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(3).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 7\r\n        let expiration4 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 8).call()\r\n        ).toNumber();\r\n\r\n        if (expiration4 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(8).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL4 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL4) {\r\n        // LEVEL 3\r\n\r\n        let expiration5 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 4).call()\r\n        ).toNumber();\r\n\r\n        if (expiration5 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(4).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 8\r\n\r\n        let expiration6 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 9).call()\r\n        ).toNumber();\r\n\r\n        if (expiration6 != 0) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(9).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n\r\n      if (LEVEL5 != undefined) {\r\n        let Totalcoins = 0;\r\n        let tempArray = [];\r\n\r\n        for await (const id of LEVEL5) {\r\n          // LEVEL 4\r\n          let expiration7 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 5).call()\r\n          ).toNumber();\r\n\r\n          if (expiration7 != 0) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(5).call()).toNumber() / 1000000;\r\n            tempArray.push({ address: id, coins: Totalcoins });\r\n            Totalcoins = 0;\r\n          }\r\n\r\n          // LEVEL 9\r\n          let expiration8 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 10).call()\r\n          ).toNumber();\r\n\r\n          if (expiration8 != 0) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(10).call()).toNumber() /\r\n              1000000;\r\n            tempArray.push({ address: id, coins: Totalcoins });\r\n            Totalcoins = 0;\r\n          }\r\n        }\r\n        TempData = [...TempData, ...tempArray];\r\n      }\r\n\r\n      // setcoinsCount(Totalcoins);\r\n    }\r\n    return TempData;\r\n  };\r\n\r\n  const PreProcessData = async (data) => {\r\n    let temp = [];\r\n    for await (const item of data) {\r\n      const id_to_num = await Utils.contract.users(item.address).call();\r\n      const data = await Promise.resolve(id_to_num);\r\n\r\n      const id = data.id.toNumber();\r\n      temp.push({ address: item.address, id: id, coins: item.coins });\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const FetchPayments = async (id, count) => {\r\n    ++LEVEL;\r\n\r\n    // console.log(count, PartnersArray.length)\r\n\r\n    if (count == PartnersArray.length) {\r\n      \r\n      return await calculate_CoinsFromLevels(LevelJSON).then(async (res) => {\r\n        return await PreProcessData(res).then((result) => {\r\n\r\n\r\n          setTableData(result);\r\n          setLoadingTable(false);\r\n        });\r\n      });\r\n      // return;\r\n    } else {\r\n      await Utils.contract\r\n        .viewUserReferral(id)\r\n        .call()\r\n        .then(async (items) => {\r\n          PartnersArray = [...PartnersArray, ...items];\r\n\r\n          if (LEVEL == 1) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 2) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 3) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 4) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 5) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          }\r\n\r\n          if (items.length > 0) {\r\n            for await (const item of items) {\r\n              let e = await Hex_to_base58(item);\r\n              if (e == undefined || !e) return;\r\n\r\n              await FetchPayments(e, count);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        // Set default address (foundation address) used for contract calls\r\n        // Directly overwrites the address object as TronLink disabled the\r\n        // function call\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(walletId),\r\n          base58: walletId,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n      return await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        return await FetchTree(walletId, {}).then(async (e) => {\r\n          return await ProccessTreeData(e, walletId, {}).then(async (res) => {\r\n            settreeData([res]);\r\n            setLoadingStruct(false);\r\n\r\n            return await FetchPartners(walletId,[]).then(async(TotalPartnersCount)=>{\r\n              // console.log(TotalPartnersCount);\r\n              return await FetchPayments(walletId, TotalPartnersCount.length);\r\n\r\n            })\r\n\r\n          });\r\n        });\r\n      });\r\n    } catch (e) {\r\n      CONNECT_WALLET();\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const FetchPartners = async (id, partners) => {\r\n    // console.log(id);\r\n    return await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          partners.push(e);\r\n          await FetchPartners(e, partners);\r\n        }\r\n        return partners;\r\n      });\r\n  };\r\n\r\n  const SearchAboutPartner = async () => {\r\n    try {\r\n      if (searchId.trim().length == 0) {\r\n        return toast.error(\"Please enter valid RefId/address\", {\r\n          style: { marginTop: \"70px\" },\r\n        });\r\n      }\r\n\r\n      // if string is address\r\n      if (/[a-zA-Z]/.test(searchId)) {\r\n        const LoadUserExist = await Utils.contract.users(searchId).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist.isExist == false) {\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n\r\n        const currentLevel = await getcurrentLevel(searchId);\r\n        setsearchPartnerData({\r\n          id: userexist.id.toString(),\r\n          address: searchId,\r\n          level: currentLevel,\r\n        });\r\n\r\n        // console.log(userexist[0]);\r\n      } else {\r\n        const LoadUserAddress = await Utils.contract\r\n          .userList(JSON.parse(searchId))\r\n          .call();\r\n        const userAddress = await Promise.resolve(LoadUserAddress);\r\n\r\n        const LoadUserExist = await Utils.contract.users(userAddress).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist.isExist == false) {\r\n          return toast.error(\"User does not exist\", {\r\n            style: { marginTop: \"70px\" },\r\n          });\r\n        }\r\n        const currentLevel = await getcurrentLevel(userAddress);\r\n        setsearchPartnerData({\r\n          id: userexist.id.toString(),\r\n          address: await Hex_to_base58(userAddress),\r\n          level: currentLevel,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getcurrentLevel = async (address) => {\r\n    let currentLevel = 0;\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      if (\r\n        currentTimestamp.toNumber() < Date.now() &&\r\n        currentTimestamp.toNumber() != 0\r\n      ) {\r\n        ++currentLevel;\r\n      }\r\n    }\r\n    return currentLevel;\r\n  };\r\n\r\n  const copyLink = () => {\r\n    try {\r\n      copy(`${window.location.origin}/register/${userID}`);\r\n      // navigator.clipboard.writeText(`${window.location.origin}/register/${userID}`);\r\n      toast.success(\"Copied to clipboard\", { style: { marginTop: \"65px\" } });\r\n    } catch (e) {\r\n      toast.error(\"Failed to Copy to clipboard\", {\r\n        style: { marginTop: \"65px\" },\r\n      });\r\n      // window.clipboardData.setData(\"Text\", 'Copy this text to clipboard')\r\n\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <Toaster />\r\n      <div>\r\n        <p className=\"header\">Partners</p>\r\n      </div>\r\n\r\n      <div className=\"linkbox\">\r\n        <div className=\"linkInside\">\r\n          <div className=\"content\">\r\n            <p className=\"linkname1\">Your Affilate Link</p>\r\n            <br />\r\n\r\n            <input\r\n              className=\"link1\"\r\n              readOnly={true}\r\n              value={`${window.location.origin}/register/${userID}`}\r\n            />\r\n            <br />\r\n            <button onClick={copyLink} className=\"copybtn\">\r\n              Copy Link\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginLeft: width >= 1100 ? \"30px\" : \"0\",\r\n            marginTop: width >= 1100 ? \"0\" : \"20px\",\r\n          }}\r\n          className=\"linkInside\"\r\n        >\r\n          <div className=\"content\">\r\n            {width >= 1100 ? (\r\n              <>\r\n                <p className=\"linkname1\">Data about partner</p>\r\n                <br />\r\n                <div className=\"Inline\">\r\n                  <input\r\n                    placeholder=\"Enter Id or Address\"\r\n                    value={searchId}\r\n                    onChange={(e) => setsearchId(e.target.value)}\r\n                    className={\"link2\"}\r\n                  />\r\n                  <span>\r\n                    <button\r\n                      onClick={() => SearchAboutPartner()}\r\n                      className=\"copybtn\"\r\n                    >\r\n                      Search\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div style={{ width: \"100%\" }}>\r\n                <p className=\"linkname1\">Data about partner</p>\r\n                <br />\r\n                <input\r\n                  placeholder=\"Enter Id or Address\"\r\n                  value={searchId}\r\n                  onChange={(e) => setsearchId(e.target.value)}\r\n                  style={{ width: \"100%\" }}\r\n                  className={\"link1\"}\r\n                />\r\n                <span>\r\n                  <button\r\n                    onClick={() => SearchAboutPartner()}\r\n                    style={{ marginTop: \"10px\" }}\r\n                    className=\"copybtn\"\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            )}\r\n\r\n            <br />\r\n            <div className=\"PartnerList\">\r\n              {searchPartnerData?.id && (\r\n                <div class=\"partner__info\">\r\n                  ID: <b>{searchPartnerData?.id}</b> &nbsp;&nbsp;&nbsp; Level:{\" \"}\r\n                  <b>{searchPartnerData?.level}</b> &nbsp;&nbsp;&nbsp; Address:\r\n                  {searchPartnerData?.address}{\" \"}\r\n                  <a\r\n                    href=\"https://etherscan.io/address/0xa7d7043df066a9fd0fc277a1d48bc07d43714557 \"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i class=\"fa fa-external-link-alt\"></i>\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"structure\">\r\n        <p className=\"linkname1\">Your structure</p>\r\n        {/* <a href=\"#\">To expand\\collapse all</a> */}\r\n        <div className=\"TreeDiv\">\r\n          {!LoadingStruct ? (\r\n            <Tree data={treeData} />\r\n          ) : (\r\n            <Spinner\r\n              variant=\"primary\"\r\n              size=\"100px\"\r\n              animation=\"border\"\r\n              role=\"status\"\r\n            >\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          )}\r\n        </div>\r\n        {!LoadingTable ? (\r\n          <Table data={TableData} coinprice={coinPrice} />\r\n        ) : (\r\n          <Spinner\r\n            variant=\"primary\"\r\n            size=\"100px\"\r\n            animation=\"border\"\r\n            role=\"status\"\r\n          >\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Partners;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Table = ({ data,LoadingTable }) => {\n  const [tableData, settableData] = useState(data);\n  useEffect(() => {\n    settableData(data);\n  }, [data]);\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          {!LoadingTable ?\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}} >Line</th>\n              <th style={{minWidth:\"50px\"}}>ID</th>\n              <th style={{minWidth:\"380px\"}}>Wallet</th>\n              <th style={{minWidth:\"50px\"}}>Level</th>\n            </tr>\n            {tableData.map((item, index) => (\n              index == 0 && (\n                <tr>\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">{item.id}</td>\n                <td className=\"tbval\">\n                <a target=\"_blank\" href={`https://tronscan.org/#/address/${item.address}`}>{item.address}</a>\n                </td>\n                <td className=\"tbval\">{item.currentLevel}</td>\n              </tr>\n              )\n             \n            ))}\n          </table>\n\n          : (\n        <Spinner\n          variant=\"primary\"\n          size=\"100px\"\n          animation=\"border\"\n          role=\"status\"\n        >\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Uplines.css\";\r\nimport Table from \"./Table\";\r\nimport Tree from \"../Tree/Tree\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport TronWeb from \"tronweb\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Uplines() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [data, setdata] = useState([]);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n  }, []);\r\n\r\n  const FetchData = async (address) => {\r\n    let temp_address = address;\r\n    let TempArray = [];\r\n    for await (const i of Array.from({ length: 5 }, (_, i) => i + 1)) {\r\n      const id_to_num = await Utils.contract.users(temp_address).call();\r\n      const data = await Promise.resolve(id_to_num);\r\n\r\n      // const id = data[1].toNumber()\r\n      const refId = data.referrerID.toNumber();\r\n\r\n      const refererAddressPromise = await Utils.contract.userList(refId).call();\r\n      const refererAddress = await Promise.resolve(refererAddressPromise);\r\n      if (temp_address != (await Hex_to_base58(refererAddress.toString()))) {\r\n        temp_address = await Hex_to_base58(refererAddress.toString());\r\n\r\n        await currentLevel(temp_address).then((res) => {\r\n          TempArray.push({\r\n            id: refId,\r\n            address: temp_address,\r\n            currentLevel: res,\r\n          });\r\n          // console.log(temp_address);\r\n          // setdata([{ id: refId, address: temp_address, currentLevel: res }]);\r\n          // setLoadingTable(false);\r\n        });\r\n      }\r\n    }\r\n\r\n    if (TempArray.length > 1) {\r\n      TempArray = TempArray.filter((e) => e.id != 0);\r\n    }\r\n\r\n    \r\n    setdata(TempArray);\r\n    setLoadingTable(false);\r\n\r\n    return;\r\n  };\r\n\r\n  const currentLevel = async (address) => {\r\n    let currentLevel = 0;\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      if (\r\n        currentTimestamp.toNumber() < Date.now() &&\r\n        currentTimestamp.toNumber() != 0\r\n      ) {\r\n        ++currentLevel;\r\n      }\r\n    }\r\n    return currentLevel;\r\n  };\r\n\r\n  // const ProccessTreeData = async (data, id, temp) => {\r\n  // const id_to_num = await Utils.contract.users(id).call();\r\n  // const resId = await Promise.resolve(id_to_num[1].toNumber());\r\n  //   temp = {\r\n  //     name: resId,\r\n  //   };\r\n  //   if (id in data) {\r\n  //     const fetch = data[id].map(async (i) => {\r\n  //       return ProccessTreeData(data, i, temp);\r\n  //     });\r\n  //     const response = await Promise.all(fetch);\r\n  //     temp[\"children\"] = response;\r\n  //   } else {\r\n  //     temp[\"name\"] = resId;\r\n  //   }\r\n\r\n  //   console.log(temp);\r\n\r\n  //   return temp;\r\n  // };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(walletId),\r\n        base58: walletId,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        await FetchData(walletId, {}).then(async (e) => {});\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Uplines\">\r\n      <div>\r\n        <p className=\"header\">Uplines</p>\r\n      </div>\r\n\r\n      <Table LoadingTable={LoadingTable} data={data} />\r\n    </div>\r\n  );\r\n}\r\nexport default Uplines;\r\n\r\n// import React from \"react\";\r\n// import \"./Uplines.css\";\r\n// import { AiFillBell } from \"react-icons/ai\";\r\n// import { FaSearch } from \"react-icons/fa\";\r\n// import Table from \"./Table\";\r\n// import Tree from \"../Tree/Tree\";\r\n// function Uplines() {\r\n\r\n//   return (\r\n// <div className=\"Uplines\">\r\n//   <div>\r\n//     <p className=\"header\">Uplines</p>\r\n//   </div>\r\n\r\n//   <Table />\r\n// </div>\r\n//   );\r\n// }\r\n// export default Uplines;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Table = ({ data, coinprice,LoadingTable }) => {\n  const [tableData, settableData] = useState(data);\n  const [coinPrice, setcoinPrice] = useState(coinprice);\n\n  useEffect(() => {\n    settableData(data);\n    setcoinPrice(coinprice);\n  }, [data, coinPrice]);\n\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          {!LoadingTable ?\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}}>Date</th>\n              <th style={{minWidth:\"380px\"}}>From whom</th>\n              <th style={{minWidth:\"50px\"}}>ID</th>\n              <th style={{minWidth:\"220px\"}}>The amount of TRX</th>\n              <th style={{minWidth:\"50px\"}}>USD</th>\n            </tr>\n\n            {tableData.map((item, index) => (\n              <tr>\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">\n                <a target=\"_blank\" href={`https://tronscan.org/#/address/${item.address}`}>{item.address}</a>\n                </td>\n                <td className=\"tbval\">{item.id}</td>\n                <td className=\"tbval\">{item.coins}</td>\n                <td className=\"tbval\">{item.coins * coinPrice.toFixed(4)}</td>\n              </tr>\n            ))}\n          </table>\n          :\n        <Spinner variant=\"primary\" size=\"100px\" animation=\"border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n      }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Lostprofits.css\";\r\nimport Table from \"./Table\";\r\nimport { AiFillBell } from \"react-icons/ai\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { getPartnersLevelJson } from \"../Redux/Reducer/PartnersLevelJson\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Lostprofits() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [treeData, settreeData] = useState([]);\r\n  const [TableData, setTableData] = useState([]);\r\n\r\n  // const levelJson = useSelector(getPartnersLevelJson);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setcoinPrice(data.tron.usd);\r\n      });\r\n  };\r\n\r\n  let TotalPartnersCount = 0;\r\n\r\n  const FetchTree = async (id, TREEDATA) => {\r\n    console.log(id,\"HI\");\r\n    await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        TotalPartnersCount += items.length;\r\n\r\n        var item = {};\r\n\r\n        if (items.length > 0) {\r\n          var temp = [];\r\n          for await (const item of items) {\r\n            let e = await Hex_to_base58(item);\r\n            temp.push(e);\r\n          }\r\n\r\n          item = {\r\n            name: id,\r\n            children: temp,\r\n          };\r\n          TREEDATA[`${id}`] = temp;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          await FetchTree(e, TREEDATA);\r\n        }\r\n      });\r\n\r\n    return TREEDATA;\r\n  };\r\n\r\n  const ProccessTreeData = async (data, id, temp) => {\r\n    const id_to_num = await Utils.contract.users(id).call();\r\n    const resId = await Promise.resolve(id_to_num.id.toNumber());\r\n    temp = {\r\n      name: resId,\r\n    };\r\n    if (id in data) {\r\n      const fetch = data[id].map(async (i) => {\r\n        return ProccessTreeData(data, i, temp);\r\n      });\r\n      const response = await Promise.all(fetch);\r\n      temp[\"children\"] = response;\r\n    } else {\r\n      temp[\"name\"] = resId;\r\n    }\r\n\r\n    console.log(temp);\r\n\r\n    return temp;\r\n    // if(data[0]?.children){\r\n    //   ProccessTreeData(data[0]?.children)\r\n    // }\r\n    // return ans\r\n  };\r\n\r\n  let PartnersArray = [];\r\n  let LevelJSON = {};\r\n\r\n  var LEVEL = 0;\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const calculate_CoinsFromLevels = async (data) => {\r\n    let TempData = [];\r\n\r\n    let LEVEL1 = data[\"1\"];\r\n    let LEVEL2 = data[\"2\"];\r\n    let LEVEL3 = data[\"3\"];\r\n    let LEVEL4 = data[\"4\"];\r\n    let LEVEL5 = data[\"5\"];\r\n\r\n    if (LEVEL1 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL1) {\r\n        // LEVEL 1\r\n        // temp[\"address\"] = id;\r\n\r\n        let expiration0 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 1).call()\r\n        ).toNumber();\r\n\r\n        if (expiration0 != 0 && expiration0 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(1).call()).toNumber() / 1000000;\r\n\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration01 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 6).call()\r\n        ).toNumber();\r\n\r\n        if (expiration01 != 0 && expiration0 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(6).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL2 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL2) {\r\n        let expiration1 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 2).call()\r\n        ).toNumber();\r\n\r\n        if (expiration1 != 0 && expiration1 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(2).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 6\r\n        let expiration2 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 7).call()\r\n        ).toNumber();\r\n\r\n        if (expiration2 != 0 && expiration2 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(7).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL3 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL3) {\r\n        // LEVEL 2\r\n\r\n        let expiration3 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 3).call()\r\n        ).toNumber();\r\n\r\n        if (expiration3 != 0 && expiration3 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(3).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 7\r\n        let expiration4 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 8).call()\r\n        ).toNumber();\r\n\r\n        if (expiration4 != 0 && expiration4 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(8).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n    }\r\n\r\n    if (LEVEL4 != undefined) {\r\n      let Totalcoins = 0;\r\n      let tempArray = [];\r\n\r\n      for await (const id of LEVEL4) {\r\n        // LEVEL 3\r\n\r\n        let expiration5 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 4).call()\r\n        ).toNumber();\r\n\r\n        if (expiration5 != 0 && expiration5 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(4).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n\r\n        // LEVEL 8\r\n\r\n        let expiration6 = (\r\n          await Utils.contract.viewUserLevelExpired(id, 9).call()\r\n        ).toNumber();\r\n\r\n        if (expiration6 != 0 && expiration6 > Date.now()) {\r\n          Totalcoins +=\r\n            (await Utils.contract.LEVEL_PRICE(9).call()).toNumber() / 1000000;\r\n          tempArray.push({ address: id, coins: Totalcoins });\r\n          Totalcoins = 0;\r\n        }\r\n      }\r\n      TempData = [...TempData, ...tempArray];\r\n\r\n      if (LEVEL5 != undefined) {\r\n        let Totalcoins = 0;\r\n        let tempArray = [];\r\n\r\n        for await (const id of LEVEL5) {\r\n          // LEVEL 4\r\n          let expiration7 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 5).call()\r\n          ).toNumber();\r\n\r\n          if (expiration7 != 0 && expiration7 > Date.now()) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(5).call()).toNumber() / 1000000;\r\n            tempArray.push({ address: id, coins: Totalcoins });\r\n            Totalcoins = 0;\r\n          }\r\n\r\n          // LEVEL 9\r\n          let expiration8 = (\r\n            await Utils.contract.viewUserLevelExpired(id, 10).call()\r\n          ).toNumber();\r\n\r\n          if (expiration8 != 0 && expiration8 > Date.now()) {\r\n            Totalcoins +=\r\n              (await Utils.contract.LEVEL_PRICE(10).call()).toNumber() /\r\n              1000000;\r\n            tempArray.push({ address: id, coins: Totalcoins });\r\n            Totalcoins = 0;\r\n          }\r\n        }\r\n        TempData = [...TempData, ...tempArray];\r\n      }\r\n\r\n      // setcoinsCount(Totalcoins);\r\n    }\r\n    return TempData;\r\n  };\r\n\r\n  const PreProcessData = async (data) => {\r\n    let temp = [];\r\n    for await (const item of data) {\r\n\r\n\r\n      const id_to_num = await Utils.contract.users(item.address).call();\r\n      const data = await Promise.resolve(id_to_num);\r\n\r\n      const id = data.id.toNumber();\r\n      \r\n      temp.push({ address: item.address, id: id, coins: item.coins });\r\n    }\r\n\r\n\r\n\r\n    return temp;\r\n  };\r\n\r\n  const FetchPayments = async (id, count) => {\r\n    ++LEVEL;\r\n\r\n    if (count == PartnersArray.length) {\r\n      // console.log(count, PartnersArray.length);\r\n      // console.log(LevelJSON);\r\n      // console.log(LEVEL);\r\n      return await calculate_CoinsFromLevels(LevelJSON).then(async (res) => {\r\n        await PreProcessData(res).then((result) => {\r\n          console.log(result);\r\n          setTableData(result);\r\n          setLoadingTable(false)\r\n        });\r\n      });\r\n      // return;\r\n    } else {\r\n      Utils.contract\r\n        .viewUserReferral(id)\r\n        .call()\r\n        .then(async (items) => {\r\n          PartnersArray = [...PartnersArray, ...items];\r\n\r\n          if (LEVEL == 1) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 2) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 3) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 4) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          } else if (LEVEL == 5) {\r\n            LevelJSON[`${LEVEL}`] = await ConverttoHexArray(items);\r\n          }\r\n\r\n          if (items.length > 0) {\r\n            for await (const item of items) {\r\n              let e = await Hex_to_base58(item);\r\n              if (e == undefined || !e) return;\r\n\r\n              await FetchPayments(e, count);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        // Set default address (foundation address) used for contract calls\r\n        // Directly overwrites the address object as TronLink disabled the\r\n        // function call\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(walletId),\r\n          base58: walletId,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        await FetchTree(walletId, {}).then(\r\n          async (e) => {\r\n            await ProccessTreeData(\r\n              e,\r\n              walletId,\r\n              {}\r\n            ).then(async (res) => {\r\n              settreeData([res]);\r\n              await FetchPayments(\r\n                walletId,\r\n                TotalPartnersCount\r\n              );\r\n              // console.log(res);\r\n            });\r\n          }\r\n        );\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Lostprofits\">\r\n      <div>\r\n        <p className=\"header\">Lostprofits</p>\r\n      </div>\r\n\r\n      <Table LoadingTable={LoadingTable} data={TableData}  coinprice={coinPrice} />\r\n    </div>\r\n  );\r\n}\r\nexport default Lostprofits;\r\n","import React, { useState } from \"react\";\nimport \"./Sidenavbar.css\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { AiFillMessage } from \"react-icons/ai\";\nimport { FaNetworkWired } from \"react-icons/fa\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { FaSearchDollar } from \"react-icons/fa\";\nimport { IoIosSend } from \"react-icons/io\";\nimport { BsBoxArrowRight } from \"react-icons/bs\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toogleMenu, getTooglemenu } from \"../Redux/Reducer/MenuReducer\";\nimport { toogleAuth } from \"../Redux/Reducer/AuthReducer\";\n\nfunction Sidenavbarmobile() {\n  const [openMenu, setopenMenu] = useState(false);\n\n  const menu = useSelector(getTooglemenu);\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n\n  const PATHNAME = () => location?.pathname?.toLowerCase();\n\n  const VALIDROUTE = (path) => (PATHNAME(path) == path ? true : false);\n\n\n \n\n  const Logout = () => {\n    window.tronLink.tronWeb = false;\n    dispatch(toogleAuth(\"LOGGEDOUT\"));\n  };\n\n  return (\n    <Offcanvas show={menu} onHide={() => dispatch(toogleMenu(!menu))}>\n      <Offcanvas.Header closeButton>\n        <Offcanvas.Title>Smart Genie</Offcanvas.Title>\n      </Offcanvas.Header>\n      <Offcanvas.Body>\n        <div style={{ width: \"100%\" }} className=\"sidenav\">\n          <div className=\"sidebarcontainer\">\n            <div className=\"menu\">\n              <ul className=\"sidebarlist\">\n                <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={VALIDROUTE(\"/\") ? \"Link-Active\" : \"Link\"}\n                  to=\"/\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/\") ? (\n                        <img\n                          src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c56c4a24ed7964135f087b1_Account%20dark.svg\"\n                          width=\"24\"\n                          alt=\"\"\n                          class=\"sidemenu_button_icon\"\n                        />\n                      ) : (\n                        <img\n                          src=\"https://uploads-ssl.webflow.com/5c30d30a32c1877cbb03e545/5c3f8723a6538c3f77d63a3c_Account.png\"\n                          width=\"24\"\n                          alt=\"\"\n                          class=\"sidemenu_button_icon\"\n                        />\n                      )}\n                    </span>\n                    Control Panel\n                  </li>\n                </Link>\n\n                <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={VALIDROUTE(\"/partners\") ? \"Link-Active\" : \"Link\"}\n                  to=\"/Partners\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/partners\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/partners\") ? (\n                        <img src=\"https://img.icons8.com/small/24/000000/tree-structure.png\" />\n                      ) : (\n                        <img src=\"https://img.icons8.com/small/24/ffffff/tree-structure.png\" />\n                      )}\n                    </span>\n                    Partners\n                  </li>\n                </Link>\n                <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={VALIDROUTE(\"/uplines\") ? \"Link-Active\" : \"Link\"}\n                  to=\"/Uplines\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/uplines\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/uplines\") ? (\n                        <img src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/24/000000/external-users-cv-resume-flatart-icons-outline-flatarticons.png\" />\n                      ) : (\n                        <img src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/24/ffffff/external-users-cv-resume-flatart-icons-outline-flatarticons.png\" />\n                      )}\n                    </span>\n                    Uplines\n                  </li>\n                </Link>\n                {/* <Link\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  className={\n                    VALIDROUTE(\"/lostprofits\") ? \"Link-Active\" : \"Link\"\n                  }\n                  to=\"/Lostprofits\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li\n                    style={{\n                      color: VALIDROUTE(\"/lostprofits\") ? \"white\" : null,\n                    }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/lostprofits\") ? (\n                        <img src=\"https://img.icons8.com/fluency-systems-filled/24/000000/search-dollar.png\" />\n                      ) : (\n                        <img src=\"https://img.icons8.com/fluency-systems-filled/24/ffffff/search-dollar.png\" />\n                      )}\n                    </span>\n                    Lost profits\n                  </li>\n                </Link> */}\n                {/* <li\n                  style={{ color: VALIDROUTE(\"/promo\") ? \"white\" : null }}\n                  className=\"sidebaritems\"\n                >\n                  <span className=\"icon\">\n                    <IoIosSend size={24} />\n                  </span>\n                  promo\n                </li> */}\n\n                <Link\n                  onClick={Logout}\n                  className={\"Link\"}\n                  to=\"/\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderRadius:\"10px\"\n                  }}\n                >\n                  <li className=\"sidebaritems\">\n                    <span className=\"icon\">\n                      <BsBoxArrowRight size={24} />\n                    </span>\n                    Logout\n                  </li>\n                </Link>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </Offcanvas.Body>\n    </Offcanvas>\n  );\n}\nexport default Sidenavbarmobile;\n","import React, { useEffect, useState } from \"react\";\nimport Topbar from \"../Components/topbar/Topbar\";\nimport Sidenavbar from \"../Components/Sidenavbar/Sidenavbar\";\nimport \"../App.css\";\nimport Controlpanel from \"../Components/Control_Panel/Controlpanel\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Message from \"../Components/Message/Message\";\nimport Partners from \"../Components/Partners/Partners\";\nimport Uplines from \"../Components/Uplines/Uplines\";\nimport Lostprofits from \"../Components/Lostprofits/Lostprofits\";\nimport Login from \"../Components/Login/Login\";\nimport ScrollMemory$1 from \"react-router-scroll-memory\";\nimport useWindowDimensions from \"../Tools/WindowDimensions\";\nimport Sidenavbarmobile from \"../Components/Sidenavbar/Sidenavbarmobile\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toogleAuth } from \"../Components/Redux/Reducer/AuthReducer\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { getPreviewModeId } from \"../Components/Redux/Reducer/PreviewMode\";\n\nfunction Console() {\n  const { height, width } = useWindowDimensions();\n  const dispatch = useDispatch();\n  const previewId = useSelector(getPreviewModeId);\n\n  useEffect(() => {\n    document.title = \"Console\";\n  \n\n    if (previewId) {\n      return;\n    }\n\n    const DISCONNECT_EMIT = setInterval(() => {\n      // console.log(window.tronLnk?.tronWeb);\n      if (window.tronLink?.tronWeb == false) {\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\n\n        // dispatch(toogleAuth(\"LOGGEDOUT\"))\n        // window.location.reload();\n      }\n      if (window?.tronLink?.tronWeb) {\n        dispatch(toogleAuth(\"LOGGEDIN\"));\n        // alert(\"YES\")\n      }\n    }, 1000);\n\n    return () => clearInterval(DISCONNECT_EMIT);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ScrollMemory$1 />\n\n      {width >= 850 ? <Sidenavbar /> : <Sidenavbarmobile />}\n\n      <div\n        className={width >= 850 ? \"ControlPanel\" : \"ControlPanel-SmallScreen \"}\n      >\n        <Topbar />\n\n        <div className=\"MainDiv\">\n          <Route component={Controlpanel} exact path=\"/\" />\n          <Route component={Message} path=\"/Message\" />\n          <Route component={Partners} path=\"/Partners\" />\n          <Route component={Uplines} path=\"/Uplines\" />\n          <Route component={Lostprofits} path=\"/Lostprofits\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Console;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Auth from \"./Routes/Auth\";\nimport Console from \"./Routes/Console\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport { getAuth, toogleAuth } from \"./Components/Redux/Reducer/AuthReducer\";\n\nconst App = () => {\n  const authStatus = useSelector(getAuth);\n \n\n  // useEffect(() => {\n  //   if (authStatus == \"LOGGEDOUT\") {\n  //     if (window.location.pathname != \"/\") {\n  //       window.location.href = \"/\";\n  //     }\n  //   }\n  // }, [authStatus]);\n\n  if (window?.tronWeb) {\n    window?.tronWeb.on(\"addressChanged\", (e) => {\n      window.location.reload();\n    });\n  }\n\n  return (\n      <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <Toaster/>\n        {/* {access ? <Redirect to={\"/\"} /> : <Redirect to={\"/login\"} />} */}\n        <Route\n          to={\"/\"}\n          render={() => (authStatus == \"LOGGEDIN\" ? <Console /> : <Auth />)}\n        />\n\n      </BrowserRouter>\n  );\n};\n\nexport default App;\n\n// <div className=\"container1\">\n// <Switch>\n//   <Route exact path=\"/\">\n//     <div className=\"con2\">\n//       {/* <Topbar /> */}\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Controlpanel />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Message\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Message />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Partners\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Partners />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Uplines\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Uplines />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Lostprofits\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Lostprofits />\n//       </div>\n//     </div>\n//   </Route>\n\n//   <Route path=\"/auth\">\n//     <Login />\n//   </Route>\n// </Switch>\n// </div>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport MenuReducer from './Reducer/MenuReducer';\nimport AuthReducer from './Reducer/AuthReducer';\nimport PartnersLevelJson from './Reducer/PartnersLevelJson';\nimport PreviewMode from './Reducer/PreviewMode';\nimport UserId from './Reducer/UserId';\n\n\nexport default configureStore({\n  reducer: {\n    menu: MenuReducer,\n    auth:AuthReducer,\n    partnersLevelJson:PartnersLevelJson,\n    previewModeId:PreviewMode,\n    userId:UserId\n\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ScrollToTop from \"./Tools/ScrollToTop\";\nimport ScrollMemory$1 from \"react-router-scroll-memory\";\nimport { Provider } from \"react-redux\";\n\nimport Store from \"./Components/Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}